{"version":3,"sources":["components/Header.js","components/Footer.js","components/routes/HomePage.js","components/screens/CartPageWrapper.js","components/Context.js","components/routes/CartPage.js","components/BookCard.js","components/screens/BrowseSection.js","components/NavBar.js","components/routes/BrowsePage.js","components/Comment.js","components/CommentList.js","components/FormComponent.js","components/screens/CommentSection.js","components/WishlistModal.js","components/screens/BookDetailsSection.js","components/routes/ViewBookPage.js","components/screens/AuthorWorksSection.js","components/routes/AuthorPage.js","components/profile/ChangePasswordModal.js","components/profile/personal.js","components/profile/CreditAddModal.js","components/profile/credit.js","components/profile/AddressAddModal.js","components/profile/address.js","components/routes/ProfilePage.js","components/NameModal.js","components/WishlistPageWrapper.js","components/routes/WishlistPage.js","components/Login.js","components/SignupForm.js","components/ConfirmForm.js","components/SuccessForm.js","components/ApplicationForm.js","index.js"],"names":["Header","id","className","to","React","Component","Footer","class","style","marginTop","marginRight","href","type","placeholder","HomePage","props","CartPageWrapper","state","cartBooks","cartItems","quantity","totalPrice","savedItems","savedBooks","username","getCartItems","bind","removeCartItems","changeQuantity","getSavedItems","removeSavedItems","moveToCartHandler","fetch","method","body","JSON","stringify","this","headers","then","res","json","books","result","forceUpdate","item","event","value","parseInt","target","bookid","price","total","toFixed","title","userid","newInfo","console","log","catch","err","find","book","cart","map","key","onChange","onClick","onSaveForLater","Button","backgroundColor","border","Icon","name","color","setState","splice","findIndex","bookIndx","push","bookId","marginBottom","Table","size","width","addItems","Context","createContext","CartPage","isLoggedIn","Consumer","context","BookCard","addToCartHandler","preventDefault","bookID","alert","addToLaterHandler","small","image","large","alt","author","pathname","genre","rating","date","BrowseSection","ogBooks","pageNumber","booksPerPage","activePage","loading","handleInputChange","handlePageChange","updateBooksPerPage10","updateBooksPerPage20","newPage","isChecked","checked","ogList","filteredList","filter","sort","a","b","card","slice","imagelink","data-toggle","aria-haspopup","aria-expanded","sortAuthorA2Z","sortAuthorZ2A","sortTitleA2Z","sortTitleZ2A","sortPriceL2H","sortPriceH2L","sortDateL2H","sortDateH2L","sortRatingL2H","sortRatingH2L","CircularProgress","itemsCountPerPage","totalItemsCount","length","pageRangeDisplayed","linkClass","NavBar","tabIndex","logout","Body","Comment","comment","nickname","height","src","CommentList","comments","index","Star","selected","f","FormComponent","handleFieldChange","text","isFeteching","error","totalStars","decision","onSubmit","starChange","personalInfo","isFormValid","data","addComment","friendOptions","avatar","Fragment","Dropdown","fluid","selection","options","getNickname","rows","renderError","Array","x","i","disabled","CommentSection","form","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","palette","background","boxShadow","shadows","padding","spacing","MyForm","mySubmitHandler","listnum","selectedOption","closeMethod","names","handleChange","evt","classname","SimpleModal","classes","useState","modalStyle","open","setOpen","handleClose","Modal","aria-labelledby","aria-describedby","onClose","DetailsSection","bookData","authorid","bookDesc","publisher","authorData","bio","img","commentData","getStars","getAverage","details","commList","reduce","val","count","stars","clsas","ViewBookPage","match","params","AuthorWorksSection","relatedBooks","newPassword","pattern","required","Personal","email","fname","lname","changeEditMode","inEditMode","renderEditView","renderDefaultView","getInfo","e","LinearProgress","contextTypes","router","PropTypes","shape","history","func","isRequired","replace","staticContext","object","ccnum","cvv","zip","expdate","minlength","maxlength","min","Credit","handleRefresh","creditInfo","newEntry","info","entry","handleDelete","city","address","Address","addressInfo","ProfilePage","listname","refresh","WishlistPageWrapper","toCart","toWish","othernum","remove","renameList","getBody","list","body1","DropdownButton","Item","body2","body3","list1","list2","list3","Wishlist","Login","handleSubmit","hideLoader","redirect","handleIssue","password","hideIssue","handleLoader","issueStyle","display","loaderStyle","FormGroup","controlId","bsSize","FormLabel","FormControl","marginLeft","login","setUsername","SignupForm","continue","nextStep","values","floatingLabelText","defaultValue","FirstName","LastName","Email","UserName","NickName","City","State","Password","label","primary","styles","button","margin","ConfirmForm","back","prevStep","validate","List","primaryText","secondaryText","SuccessForm","step","ApplicationForm","Password2","input","Provider","usernmae","children","App","exact","path","component","Home","Browse","ViewBook","AuthorWorks","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb86773a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Header extends React.Component {\n    constructor() {\n        super();\n    }\n\n    render() {\n        return (\n            <div id='jumbo-container'>\n                <div className='jumbotron header'>\n                    <div className='container header-text'>\n                        <h1 className='display-2'>Geek Text</h1>\n                        <h1 className='display-4'>\n                            Because geeks like reading too.\n                        </h1>\n                        <hr className='my-4' />\n                        <button\n                            className='ui secondary basic button huge'\n                            id='browse-button'\n                        >\n                            <Link to='/Browse'>Browse</Link>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => {\n    return (\n        <div>\n            <div class='footer-bs'>\n                <div class='row'>\n                    <div\n                        class='col-md-3 footer-brand animated fadeInLeft'\n                        style={{ marginTop: \"-1%\" }}\n                    >\n                        <h4>GEEK TEXT</h4>\n                        <p>\n                            Suspendisse hendrerit tellus laoreet luctus\n                            pharetra. Aliquam porttitor vitae orci nec\n                            ultricies. Curabitur vehicula, libero eget faucibus\n                            faucibus, purus erat eleifend enim, porta\n                            pellentesque ex mi ut sem.\n                        </p>\n                        <p>2019 No rights reserved</p>\n                    </div>\n                    <div\n                        class='col-md-4 footer-nav animated fadeInUp'\n                        style={{ marginRight: \"-10%\" }}\n                    >\n                        <h4>Team_</h4>\n                        <div class='col-md-6'>\n                            <ul class='pages'>\n                                <li>Slav Tourachev</li>\n                                <li>Steven Valle</li>\n                                <li>Shanna Sit</li>\n                                <li>Steven Villa</li>\n                                <li>Lalliet Vila</li>\n                                <li>Noe Velasquez</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div class='col-md-2 footer-social animated fadeInDown footer-links'>\n                        <h4>Follow Us</h4>\n                        <ul>\n                            <li>\n                                <a href='#' className='footer-links'>\n                                    Facebook\n                                </a>\n                            </li>\n                            <li>\n                                <a href='#' className='footer-links'>\n                                    Twitter\n                                </a>\n                            </li>\n                            <li>\n                                <a href='#' className='footer-links'>\n                                    Instagram\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class='col-md-3 footer-ns animated fadeInRight'>\n                        <h4>Book Search</h4>\n                        <p>\n                            A rover wearing a fuzzy suit doesn’t alarm the real\n                            penguins\n                        </p>\n                        <p>\n                            <div class='input-group'>\n                                <input\n                                    type='text'\n                                    class='form-control'\n                                    placeholder='Search for...'\n                                />\n                                >\n                                <span class='input-group-btn'>\n                                    <button\n                                        class='btn btn-default'\n                                        type='button'\n                                    >\n                                        <span class='glyphicon glyphicon-envelope'></span>\n                                    </button>\n                                </span>\n                            </div>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\n\nclass HomePage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='body'>\n                    <Header />\n                    <Footer />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;\n","import React from 'react';\nimport { Table } from \"reactstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { Icon } from \"semantic-ui-react\";\n\nclass CartPageWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cartBooks: [], //Actual Books in the cart\n            cartItems:[], //HTML of the table for the cart\n            quantity: 0,\n            totalPrice: 0.0,\n            savedItems: [], //Actual items in saved for later\n            savedBooks: [], //HTML of table for saved for later\n            username: this.props.username, //should use context here\n        }\n\n        //Cart Methods\n        this.getCartItems = this.getCartItems.bind(this);\n        this.removeCartItems = this.removeCartItems.bind(this);\n        this.changeQuantity = this.changeQuantity.bind(this);\n\n        //Saved for Later Methods\n        this.getSavedItems = this.getSavedItems.bind(this);\n        this.removeSavedItems = this.removeSavedItems.bind(this);\n        this.moveToCartHandler = this.moveToCartHandler.bind(this);\n    }\n\n    componentDidMount(){\n        fetch(\"/cart\", {\n            method: \"post\",\n            body: JSON.stringify({ username: this.props.username }),\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n        .then(res => res.json())\n        .then(books => {\n            this.getCartItems(books.result)\n        });\n\n        fetch(\"/saved-for-later\", {\n            method: \"post\",\n            body: JSON.stringify({ username: this.state.username }),\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n        .then(res => res.json())\n        .then(books => {\n            this.getSavedItems(books.result);\n        });\n\n        this.forceUpdate();\n    }\n\n\n    //METHODS FOR THE CART\n    changeQuantity(item, event) {\n        let value = parseInt(event.target.value, 10);\n        let id = item.bookid;\n        if (event.target.value == \"\") {\n            value = 0;\n        }\n        fetch(\"/cart/edit\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                quantity: value,\n                price: item.price,\n                total: (item.price * value).toFixed(2),\n                title: item.title,\n                userid: this.state.username,\n                bookid: item.bookid\n            }),\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n            .then(res => res.json())\n            .then(newInfo => {\n                console.log(\"ITEM EDITED\");\n            })\n            .catch(err => {\n                console.log(err);\n            });\n        console.log(this.state.cartBooks.find(book => book.bookid === id));\n        this.state.cartBooks.find(book => book.bookid === id).quantity = value;\n        this.getCartItems(this.state.cartBooks);\n    }\n\n    getCartItems(books) {\n        let total = 0.0;\n        console.log(\"BOOKS START:\")\n        console.log(books);\n        //Below all books get mapped onto the cart. Delete after\n        let cart = books.map(item => {\n            total += item.price * item.quantity;\n            return (\n                <tr key={item.bookid}>\n                    <td>{item.title}</td>\n                    <td>\n                        x\n                        <input\n                            class='purchase-input'\n                            type='number'\n                            value={item.quantity}\n                            onChange={this.changeQuantity.bind(this, item)}\n                        />\n                    </td>\n                    <td>${item.price.toFixed(2)}</td>\n\n                    <td>\n                        <button\n                            type='button'\n                            class='btn btn-outline-dark'\n                            onClick={this.onSaveForLater.bind(this, item)}\n                        >\n                            Save For Later\n                        </button>\n                        <Button\n                            onClick={this.removeCartItems.bind(this, item)}\n                            style={{\n                                backgroundColor: \"rgba(0,0,0,0)\",\n                                border: \"none\"\n                            }}\n                        >\n                            <Icon name='close' color='red' />\n                        </Button>\n                    </td>\n                </tr>\n            )\n        })\n        this.setState({ cartBooks: books, cartItems: cart, totalPrice: total });\n        this.forceUpdate();\n    }\n\n    removeCartItems(item) {\n        this.state.cartBooks.splice(\n            this.state.cartBooks.findIndex(book => book.bookid === item.bookid),\n            1\n        );\n        \n        fetch(\"/cart/delete\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                userid: this.state.username,\n                bookid: item.bookid\n            }),\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n        .then(res => console.log(res.body))\n        .then(newInfo => {\n            console.log(\"Item Deleted\");\n        })\n        .catch(err => {\n            console.log(err);\n        });\n        this.getCartItems(this.state.cartBooks);\n    }\n    \n    onSaveForLater(item) {\n        let bookIndx = this.state.cartBooks.findIndex(\n            book => book.bookid === item.bookid\n        );\n        console.log(this.state.cartBooks[bookIndx]);\n        \n        //Adding item to Saved for later\n        this.state.savedBooks.push(this.state.cartBooks[bookIndx]);\n        this.getSavedItems(this.state.savedBooks)\n        \n        //Removing item from Cart\n        fetch(\"/saved-for-later/cart-to-later\", {\n            method: \"post\",\n            body: JSON.stringify({\n                userid: this.state.username,\n                bookid: item.bookid,\n                price: item.price,\n                title: item.title\n            }),\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n        .then(res => console.log(res.body))\n        .then(newInfo => {\n            console.log(\"Item Moved\");\n        })\n        .catch(err => {\n            console.log(err);\n        });\n        this.state.cartBooks.splice(bookIndx, 1);\n        this.getCartItems(this.state.cartBooks)\n    }\n    //SAVED FOR LATER METHODS HERE\n    moveToCartHandler (item) {\n        let bookIndx = this.state.savedBooks.findIndex(\n            book => book.bookid === item.bookid\n        );\n        console.log(this.state.savedBooks[bookIndx]);\n\n        //Adding the item to the Cart\n        this.state.cartBooks.push(this.state.savedBooks[bookIndx]);\n        this.getCartItems(this.state.cartBooks);\n\n        //Removing the item from Saved for Later\n        fetch(\"/saved-for-later/swap\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                userid: this.state.username,\n                bookid: item.bookid,\n                price: item.price,\n                title: item.title,\n            }),\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n        .then(res => res.json())\n        .catch(err => {\n            console.log(err);\n        });\n\n        this.state.savedBooks.splice(bookIndx, 1);\n        this.getSavedItems(this.state.savedBooks);\n    };\n\n    getSavedItems(books) {\n        //Below all books get mapped onto the cart. Delete after\n        let cart = books.map(item => {\n            return (\n                <tr key={item.bookId}>\n                    <td>{item.title}</td>\n                    <td>${item.price.toFixed(2)}</td>\n                    <td>\n                        <button\n                            onClick={this.moveToCartHandler.bind(this, item)}\n                            type='button'\n                            class='btn btn-outline-dark'\n                        >\n                            Move To Cart\n                        </button>\n                        <Button\n                            onClick={this.removeSavedItems.bind(this, item)}\n                            style={{\n                                backgroundColor: \"rgba(0,0,0,0)\",\n                                border: \"none\"\n                            }}\n                        >\n                            <Icon name='close' color='red' />\n                        </Button>\n                    </td>\n                </tr>\n            );\n        });\n        console.log(books);\n        this.setState({ savedBooks: books, savedItems: cart });\n        this.forceUpdate();\n    }\n\n    removeSavedItems(item) {\n        this.state.savedBooks.splice(\n            this.state.savedBooks.findIndex(\n                book => book.bookid === item.bookid\n            ), 1\n        );\n        this.getSavedItems(this.state.savedBooks);\n        fetch(\"/saved-for-later/delete\", {\n                      method: \"POST\",\n            body: JSON.stringify({\n                userid: this.state.username,\n                bookid: item.bookid\n            }),\n            headers: { \"Content-Type\": \"application/json\" }\n        })            .then(res => console.log(res.body))\n            .then(newInfo => {\n                console.log(\"Item Deleted\");\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                {/* CART RENDER */}\n                <div id='purchase-container'>\n                    <div id='purchase-body'>\n                        <h1 className='display-4' style={{ marginBottom: \"3%\" }}>\n                            Your Cart\n                        </h1>\n                        <Table>\n                            <thead>\n                                <tr>\n                                    <th>Book Title</th>\n                                    <th>Quantity</th>\n                                    <th>Price</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>{this.state.cartItems}</tbody>\n                        </Table>\n                        <div className='price-row'>\n                            <h3>\n                                Total Price: ${this.state.totalPrice.toFixed(2)}\n                            </h3>\n                        </div>\n                        <div className='price-row'>\n                            <Button\n                                size='lg'\n                                style={{ width: \"30%\" }}\n                                onClick={this.addItems}\n                            >\n                                Purchase\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n\n                {/* SAVEDFORLATER RENDER */}\n                <div id='purchase-container'>\n                    <div id='purchase-body'>\n                        <h1 className='display-4' style={{ marginBottom: \"3%\" }}>\n                            Saved For Later\n                        </h1>\n                        <Table>\n                            <thead>\n                                <tr>\n                                    <th>Book Title</th>\n                                    <th>Price</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>{this.state.savedItems}</tbody>\n                        </Table>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CartPageWrapper;\n","import React from 'react';\n\nconst Context = React.createContext();\n\nexport default Context;\n","import React from 'react';\nimport Footer from '../Footer';\nimport CartPageWrapper from '../screens/CartPageWrapper'\nimport Context from '../Context';\nimport { Link } from 'react-router-dom';\n\nclass CartPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        if (this.props.isLoggedIn) {\n            return (\n                <div>\n                    <div className='body'>\n                        <Context.Consumer>\n                            {context => (\n                                <div>\n                                    <CartPageWrapper\n                                        username={context.username}\n                                        isLoggedIn={context.isLoggedIn}\n                                    />\n                                </div>\n                            )}\n                        </Context.Consumer>\n\n                        <Footer />\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div class='ohoh'>\n                    <h1 class='display-4'>Oh, Oh!</h1>\n                    <p class='lead'>Looks like you're not logged in!</p>\n                    <p class='lead'>Click below to get to the login page.</p>\n                    <hr class='my-4' />\n                    <p class='lead'>\n                        <Link to='/login'>\n                            <button\n                                type='button'\n                                class='btn btn-outline-primary btn-block'\n                            >\n                                Take Me There!\n                            </button>\n                        </Link>\n                    </p>\n                </div>\n            );\n        }\n    }\n}\n\nexport default CartPage;\n","import React from \"react\";\nimport ModalImage from \"react-modal-image\";\nimport { Link } from \"react-router-dom\";\n\nclass BookCard extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    addToCartHandler = event => {\n        event.preventDefault();\n\n        fetch(\"/cart/insert\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                username: this.props.username,\n                bookID: this.props.bookID,\n                quantity: 1,\n                price: this.props.price,\n                title: this.props.title\n            }),\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n            .then(res => res.json())\n            // .then(newInfo => {\n            //     //look at address-info for return values\n            //     this.getInfo();\n            // })\n            .catch(err => {\n                console.log(err);\n            })\n            .then(alert(\"Submitted!\"));\n    };\n\n    addToLaterHandler = event => {\n        event.preventDefault();\n\n        fetch(\"/saved-for-later/insert\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                username: this.props.username,\n                bookID: this.props.bookID,\n                quantity: 1,\n                price: this.props.price,\n                title: this.props.title\n            }),\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n            .then(res => res.json())\n            // .then(newInfo => {\n            //     //look at address-info for return values\n            //     this.getInfo();\n            // })\n            .catch(err => {\n                console.log(err);\n            })\n            .then(alert(\"Submitted!\"));\n    };\n\n    render() {\n        if (this.props.isLoggedIn) {\n            return (\n                <div>\n                    <div class='card'>\n                        <ModalImage\n                            small={this.props.image}\n                            large={this.props.image}\n                            className='card-top'\n                            alt={this.props.title}\n                        />\n                        <div class='card-body'>\n                            <h5 class='card-title'>{this.props.author}</h5>\n                            <Link\n                                to={{ pathname: \"/book/\" + this.props.bookID }}\n                            >\n                                <p class='card-text'>{this.props.title}</p>\n                            </Link>\n                        </div>\n                        <ul class='list-group list-group-flush'>\n                            <li class='list-group-item'>\n                                Genre: {this.props.genre}\n                            </li>\n                            <li class='list-group-item'>\n                                Price: ${this.props.price}\n                            </li>\n                            <li class='list-group-item'>\n                                Rating: {this.props.rating}\n                            </li>\n                            <li class='list-group-item'>\n                                Release Date: {this.props.date}\n                            </li>\n                            {/* <li class='list-group-item'>Book ID: {props.bookID}</li> */}\n                        </ul>\n                        <div class='card-body card-links'>\n                            <button\n                                type='button'\n                                class='btn btn-secondary cart-button'\n                                onClick={event => this.addToCartHandler(event)}\n                            >\n                                Add to Cart\n                            </button>\n                            <button\n                                type='button'\n                                class='btn btn-secondary cart-button'\n                                onClick={event => this.addToLaterHandler(event)}\n                            >\n                                Save For later\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <div class='card'>\n                        {/* <img\n                            src={this.props.image}\n                            className='card-top image-zoom'\n                            alt={this.props.title}\n                        /> */}\n                        <ModalImage\n                            small={this.props.image}\n                            large={this.props.image}\n                            className='card-top'\n                            alt={this.props.title}\n                        />\n                        <div class='card-body'>\n                            <h5 class='card-title'>{this.props.author}</h5>\n                            <Link\n                                to={{ pathname: \"/book/\" + this.props.bookID }}\n                            >\n                                <p class='card-text'>{this.props.title}</p>\n                            </Link>\n                        </div>\n                        <ul class='list-group list-group-flush'>\n                            <li class='list-group-item'>\n                                Genres: {this.props.genre}\n                            </li>\n                            <li class='list-group-item'>\n                                Price: ${this.props.price}\n                            </li>\n                            <li class='list-group-item'>\n                                Rating: {this.props.rating}\n                            </li>\n                            <li class='list-group-item'>\n                                Release Date: {this.props.date}\n                            </li>\n                            {/* <li class='list-group-item'>Book ID: {props.bookID}</li> */}\n                        </ul>\n                        <div class='card-body card-links'>\n                            <Link to='/login'>\n                                <button\n                                    type='button'\n                                    className='btn btn-secondary btn-lg btn-block'\n                                >\n                                    Add To Cart\n                                </button>\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default BookCard;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport BookCard from '../BookCard';\nimport Pagination from 'react-js-pagination';\nimport Context from '../Context';\n\nclass BrowseSection extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            books: [],\n            ogBooks: [],\n            pageNumber: 1,\n            booksPerPage: 10,\n            activePage: 1,\n            loading: true\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handlePageChange = this.handlePageChange.bind(this);\n        this.updateBooksPerPage10 = this.updateBooksPerPage10.bind(this);\n        this.updateBooksPerPage20 = this.updateBooksPerPage20.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('/books')\n            .then(res => res.json())\n            .then(books =>\n                this.setState({ books: books, ogBooks: books, loading: false })\n            );\n    }\n\n    handlePageChange(pageNumber) {\n        console.log(`active page is ${pageNumber}`);\n        let newPage = pageNumber;\n        this.setState({ activePage: newPage }, () => {\n            console.log(this.state.activePage);\n        });\n        this.forceUpdate();\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const isChecked =\n            target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        let value = target.value;\n        const ogList = this.state.ogBooks;\n\n        if (name === 'rating') {\n            value = parseInt(value);\n        }\n\n        if (isChecked === true) {\n            let filteredList = this.state.books.filter(book => {\n                if (book[name] === value) {\n                    return true;\n                } else {\n                    return false;\n                }\n            });\n            console.log(filteredList);\n            this.setState({\n                books: filteredList\n            });\n            this.forceUpdate();\n        } else {\n            this.setState({\n                books: ogList\n            });\n            console.log('False');\n        }\n    }\n\n    sortAlphabeticaly() {\n        this.setState = this.state.books.sort((a, b) =>\n            a.author > b.author ? 1 : -1\n        );\n\n        console.log(this.state.books);\n    }\n\n    sortAuthorA2Z(props) {\n        this.setState = this.state.books.sort((a, b) =>\n            a.author > b.author ? 1 : -1\n        );\n        this.forceUpdate();\n    }\n\n    sortAuthorZ2A(props) {\n        this.setState = this.state.books.sort((a, b) =>\n            a.author < b.author ? 1 : -1\n        );\n        this.forceUpdate();\n    }\n\n    sortTitleA2Z(props) {\n        this.setState = this.state.books.sort((a, b) =>\n            a.title > b.title ? 1 : -1\n        );\n        this.forceUpdate();\n    }\n\n    sortTitleZ2A(props) {\n        this.setState = this.state.books.sort((a, b) =>\n            a.title < b.title ? 1 : -1\n        );\n        this.forceUpdate();\n    }\n\n    sortPriceL2H(props) {\n        this.setState = this.state.books.sort((a, b) => a.price - b.price);\n        this.forceUpdate();\n    }\n    sortPriceH2L(props) {\n        this.setState = this.state.books.sort((a, b) => b.price - a.price);\n        this.forceUpdate();\n    }\n\n    sortDateL2H(props) {\n        this.setState = this.state.books.sort((a, b) =>\n            b.date < a.date ? 1 : -1\n        );\n        this.forceUpdate();\n    }\n    sortDateH2L(props) {\n        this.setState = this.state.books.sort((a, b) =>\n            a.date < b.date ? 1 : -1\n        );\n        this.forceUpdate();\n    }\n\n    sortRatingL2H(props) {\n        this.setState = this.state.books.sort((a, b) => a.rating - b.rating);\n        this.forceUpdate();\n    }\n\n    sortRatingH2L(props) {\n        this.setState = this.state.books.sort((a, b) => b.rating - a.rating);\n        this.forceUpdate();\n    }\n\n    updateBooksPerPage10() {\n        this.setState({ booksPerPage: '10' });\n        this.forceUpdate();\n    }\n\n    updateBooksPerPage20() {\n        this.setState({ booksPerPage: '20' });\n        this.forceUpdate();\n    }\n\n    render() {\n        const card = this.state.books\n            .slice(\n                (this.state.activePage - 1) * this.state.booksPerPage,\n                this.state.activePage * this.state.booksPerPage\n            )\n            .map(book => (\n                <Context.Consumer>\n                    {context => (\n                        <BookCard\n                            username={context.username}\n                            isLoggedIn={context.isLoggedIn}\n                            bookID={book.bookid}\n                            title={book.title}\n                            image = {book.imagelink}\n                            author={book.author}\n                            genre={book.genre}\n                            price={book.price}\n                            rating={book.rating}\n                            date={book.date}\n                        />\n                    )}\n                </Context.Consumer>\n            ));\n\n        return (\n            <div id='browse-container'>\n                <div id='sidebar'>\n                    <div>\n                        <h2>Genre</h2>\n                        <p>\n                            Comedy{' '}\n                            <input\n                                name='genre'\n                                value='Comedy'\n                                type='checkbox'\n                                onChange={event => this.handleInputChange(event)}\n                            />\n                        </p>\n                        <p>\n                            Fantasy{' '}\n                            <input\n                                name='genre'\n                                value='Fantasy'\n                                type='checkbox'\n                                onChange={event => this.handleInputChange(event)}\n                            />\n                        </p>\n                        <p>\n                            Horror{' '}\n                            <input\n                                name='genre'\n                                value='Horror'\n                                type='checkbox'\n                                onChange={event => this.handleInputChange(event)}\n                            />\n                        </p>\n                        <p>\n                            Nonfiction{' '}\n                            <input\n                                name='genre'\n                                value='Nonfiction'\n                                type='checkbox'\n                                onChange={event => this.handleInputChange(event)}\n                            />\n                        </p>\n                        <p>\n                            Mystery{' '}\n                            <input\n                                name='genre'\n                                value='Mystery'\n                                type='checkbox'\n                                onChange={event => this.handleInputChange(event)}\n                            />\n                        </p>\n                        <p>\n                            Romance{' '}\n                            <input\n                                name='genre'\n                                value='Romance'\n                                type='checkbox'\n                                onChange={event => this.handleInputChange(event)}\n                            />\n                        </p>\n                        <p>\n                            Sci-Fi{' '}\n                            <input\n                                name='genre'\n                                value='Sci-Fi'\n                                type='checkbox'\n                                onChange={event => this.handleInputChange(event)}\n                            />\n                        </p>\n                        <hr />\n                        <h3>\n                            Top Sellers Only <input type='checkbox' />\n                        </h3>\n                        <hr />\n                        <h2>Rating</h2>\n                        <p>\n                            <i class='fas fa-star'></i>\n                            <i class='fas fa-star'></i>\n                            <i class='fas fa-star'></i>\n                            <i class='fas fa-star'></i>\n                            <i class='fas fa-star'></i>{' '}\n                            <input\n                                name='rating'\n                                value='5'\n                                type='checkbox'\n                                onChange={event => this.handleInputChange(event)}\n                            />\n                        </p>\n                        <p>\n                            <i class='fas fa-star'></i>\n                            <i class='fas fa-star'></i>\n                            <i class='fas fa-star'></i>\n                            <i class='fas fa-star'></i>{' '}\n                            <input\n                                name='rating'\n                                value='4'\n                                type='checkbox'\n                                onChange={event => this.handleInputChange(event)}\n                            />\n                        </p>\n                        <p>\n                            <i class='fas fa-star'></i>\n                            <i class='fas fa-star'></i>\n                            <i class='fas fa-star'></i>{' '}\n                            <input\n                                name='rating'\n                                value='3'\n                                type='checkbox'\n                                onChange={event => this.handleInputChange(event)}\n                            />\n                        </p>\n                        <p>\n                            <i class='fas fa-star'></i>\n                            <i class='fas fa-star'></i>{' '}\n                            <input\n                                name='rating'\n                                value='2'\n                                type='checkbox'\n                                onChange={event => this.handleInputChange(event)}\n                            />\n                        </p>\n                        <p>\n                            <i class='fas fa-star'></i>{' '}\n                            <input\n                                name='rating'\n                                value='1'\n                                type='checkbox'\n                                onChange={event => this.handleInputChange(event)}\n                            />\n                        </p>\n                    </div>\n                </div>\n\n                <div id='browse-body'>\n                    <div id='nav-browse-body'>\n                        <div class='dropdown'>\n                            <button\n                                type='button'\n                                class='btn btn-lg btn-light dropdown-toggle'\n                                data-toggle='dropdown'\n                                aria-haspopup='true'\n                                aria-expanded='false'\n                            >\n                                Sort By\n                            </button>\n                            <div class='dropdown-menu'>\n                                <a\n                                    class='dropdown-item'\n                                    onClick={() => this.sortAuthorA2Z()}\n                                >\n                                    Author: A-Z\n                                </a>\n                                <a\n                                    class='dropdown-item'\n                                    onClick={() => this.sortAuthorZ2A()}\n                                >\n                                    Author: Z-A\n                                </a>\n                                <a\n                                    class='dropdown-item'\n                                    onClick={() => this.sortTitleA2Z()}\n                                >\n                                    Title: A-Z\n                                </a>\n                                <a\n                                    class='dropdown-item'\n                                    onClick={() => this.sortTitleZ2A()}\n                                >\n                                    Title: Z-A\n                                </a>\n                                <a\n                                    class='dropdown-item'\n                                    onClick={() => this.sortPriceL2H()}\n                                >\n                                    Price: Low-High\n                                </a>\n                                <a\n                                    class='dropdown-item'\n                                    onClick={() => this.sortPriceH2L()}\n                                >\n                                    Price: High-Low\n                                </a>\n                                <a\n                                    class='dropdown-item'\n                                    onClick={() => this.sortDateL2H()}\n                                >\n                                    Date: Old-New\n                                </a>\n                                <a\n                                    class='dropdown-item'\n                                    onClick={() => this.sortDateH2L()}\n                                >\n                                    Date: New-Old\n                                </a>\n                                <a\n                                    class='dropdown-item'\n                                    onClick={() => this.sortRatingL2H()}\n                                >\n                                    Rating: Low-High\n                                </a>\n                                <a\n                                    class='dropdown-item'\n                                    onClick={() => this.sortRatingH2L()}\n                                >\n                                    Rating: High-Low\n                                </a>\n                            </div>\n                        </div>\n\n                        <div class='dropdown'>\n                            <button\n                                type='button'\n                                class='btn btn-lg btn-light dropdown-toggle'\n                                data-toggle='dropdown'\n                                aria-haspopup='true'\n                                aria-expanded='false'\n                            >\n                                Books Per Page:\n                            </button>\n                            <div class='dropdown-menu'>\n                                <a\n                                    onClick={this.updateBooksPerPage10}\n                                    class='dropdown-item'\n                                    href='#'\n                                >\n                                    10\n                                </a>\n                                <a\n                                    onClick={this.updateBooksPerPage20}\n                                    class='dropdown-item'\n                                    href='#'\n                                >\n                                    20\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                    <hr className='sexy_line' />\n\n                    <div id='card-body'>\n                        {this.state.loading ? <CircularProgress /> : card}\n                    </div>\n                    <br />\n                    <Pagination\n                        activePage={this.state.activePage}\n                        itemsCountPerPage={this.state.booksPerPage}\n                        totalItemsCount={this.state.books.length}\n                        pageRangeDisplayed={5}\n                        onChange={this.handlePageChange}\n                        linkClass='page-link'\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BrowseSection;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Context from './Context';\n\n// Navbar accepts the context as props and then we can render conditionally depending on if the user is logged in.\n\nconst NavBar = props => {\n    if (!props.isLoggedIn) {\n        return (\n            <div>\n                <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n                    <div\n                        className='collapse navbar-collapse'\n                        id='navbarSupportedContent'\n                    >\n                        <div id='navbar-left'>\n                            <ul className='navbar-nav navbar-items'>\n                                <li className='nav-item active' id='home-logo'>\n                                    <Link to='/'>\n                                        <i className='fas fa-home fa-lg'></i>\n                                    </Link>\n                                </li>\n\n                                <li>\n                                    <div\n                                        className='ui vertical large button'\n                                        tabIndex='0'\n                                    >\n                                        <div className='visible content'>\n                                            <Link to='/Browse'>Browse</Link>\n                                        </div>\n                                    </div>\n                                </li>\n                            </ul>\n                        </div>\n                        <div id='navbar-right'>\n                            <ul className='navbar-nav navbar-items'>\n                                <li>\n                                    <Link to='/login'>\n                                        <div\n                                            className='ui vertical large button'\n                                            tabIndex='0'\n                                        >\n                                            <div className='visible content'>\n                                                Login\n                                            </div>\n                                        </div>\n                                    </Link>\n                                </li>\n                                <li>\n                                    <div\n                                        className='ui vertical large button'\n                                        tabIndex='0'\n                                    >\n                                        <div className='visible content'>\n                                            <Link to='/cart'>\n                                                <i className='shop icon'></i>\n                                            </Link>\n                                        </div>\n                                    </div>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n                    <div\n                        className='collapse navbar-collapse'\n                        id='navbarSupportedContent'\n                    >\n                        <div id='navbar-left'>\n                            <ul className='navbar-nav navbar-items'>\n                                <li className='nav-item active' id='home-logo'>\n                                    <Link to='/'>\n                                        <i className='fas fa-home fa-lg'></i>\n                                    </Link>\n                                </li>\n                                <li>\n                                    <div\n                                        className='ui vertical large button'\n                                        tabIndex='0'\n                                    >\n                                        <div className='visible content'>\n                                            <Link to='/Browse'>Browse</Link>\n                                        </div>\n                                    </div>\n                                </li>\n                            </ul>\n                        </div>\n\n                        <div id='navbar-right'>\n                            <ul className='navbar-nav navbar-items'>\n                                <li>\n                                    <div\n                                        className='ui vertical large button'\n                                        tabIndex='0'\n                                    >\n                                        <div className='visible content'>\n                                            <Link to='/profile'>\n                                                My Account\n                                            </Link>\n                                        </div>\n                                    </div>\n                                </li>\n                                <li>\n                                    <div\n                                        className='ui vertical large button'\n                                        tabIndex='0'\n                                    >\n                                        <div className='visible content'>\n                                            <Link to='/wishlist'>\n                                                Wishlists\n                                            </Link>\n                                        </div>\n                                    </div>\n                                </li>\n                                <li>\n                                    <div\n                                        className='ui vertical large button'\n                                        tabIndex='0'\n                                    >\n                                        <Context.Consumer>\n                                            {context => (\n                                                <div\n                                                    className='visible content'\n                                                    onClick={context.logout}\n                                                >\n                                                    <Link to='/'>Sign Out</Link>\n                                                </div>\n                                            )}\n                                        </Context.Consumer>\n                                    </div>\n                                </li>\n                                <li>\n                                    <div\n                                        className='ui vertical large button'\n                                        tabIndex='0'\n                                    >\n                                        <div className='visible content'>\n                                            <Link to='/cart'>\n                                                <i className='shop icon'></i>\n                                            </Link>\n                                        </div>\n                                    </div>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n};\nexport default NavBar;\n","import React from \"react\";\n\nimport BrowseSection from \"../screens/BrowseSection\";\nimport Navbar from \"../NavBar\";\nimport Footer from \"../Footer\";\n\nclass Body extends React.Component {\n    render() {\n        return (\n            <div>\n                <BrowseSection />\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default Body;\n","import React from 'react';\n\nfunction Comment(props) {\n\tconst {nickname, comment, rating} = props.comment;\n\treturn (\n\t\t<div className='media mb-3'>\n\t\t\t<img\n\t\t\t\tclassName='mr-3 bg-light rounded'\n\t\t\t\twidth='50'\n\t\t\t\theight='50'\n\t\t\t\t// src={`https://api.adorable.io/avatars/265/abot${nickname.toLowerCase()}@adorable.io.png`}\n\t\t\t\tsrc={`https://ui-avatars.com/api/?name=${nickname}?rounded=true`}\n\t\t\t\talt={nickname}\n\t\t\t/>\n\n\t\t\t<div className='media-body p-2 shadow-sm rounded bg-light border'>\n\t\t\t\t<median className='float-right text-muted'>\n\t\t\t\t\t{' '}\n\t\t\t\t\tRating: {rating}\n\t\t\t\t</median>\n\t\t\t\t<h6 className='mt-0 mb-1 text-muted'>{nickname}</h6>\n\t\t\t\t{comment}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Comment;\n","import React from \"react\";\nimport Comment from \"./Comment\";\n\nexport default function CommentList(props) {\n\n\n  return (\n\n    <div className='commentList'>\n      <h5 className='text-muted mb-4'>\n        <span className='badge badge-success'>{props.comments.length}</span>{\" \"}\n        Comment{props.comments.length > 0 ? \"s\" : \"\"}\n      </h5>\n\n      {props.comments.length === 0 && !props.loading ? (\n        <div className='alert text-center alert-info'>\n          Be the first to comment about this book\n        </div>\n      ) : null}\n\n      {props.comments.map((comment, index) => (\n        <Comment key={index} comment={comment} />\n      ))}\n    </div>\n  );\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/stars.css';\nimport {Dropdown} from 'semantic-ui-react';\n\nconst Star = ({selected = false, onClick = f => f}) => (\n\t<div\n\t\tclassName={selected ? 'star selected' : 'star'}\n\t\tonClick={onClick}\n\t></div>\n);\n\nStar.propTypes = {\n\tselected: PropTypes.bool,\n\tonClick: PropTypes.func\n};\n\nexport class FormComponent extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisFeteching: false,\n\t\t\tloading: false,\n\t\t\terror: '',\n\t\t\ttotalStars: 5,\n\t\t\tdecision: false,\n\n\t\t\tnickname: '' ,\n\t\t\tcomment: '',\n\t\t\trating: 0, // adding the star rating system\n\t\t\tbookid: this.props.bookid,\n\t\t\tuserid: this.props.username\n\t\t};\n\n\t\t//bind context to methods\n\t\tthis.handleFieldChange = this.handleFieldChange.bind(this);\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t\t//bind the starChange\n\t\tthis.starChange = this.starChange.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('/personal-info', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({username: this.props.username}),\n\t\t\theaders: {'Content-Type': 'application/json'}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(personalInfo =>\n\t\t\t\tthis.setState({\n\t\t\t\t\tnickname: personalInfo.nickname\n\t\t\t\t})\n\t\t\t)\n\t\t\t.then(console.log(this.state))\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\tstarChange(event) {\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\trating: event // adding the star rating system\n\t\t});\n\t}\n\n\t/**\n\t * Handle form input field changes & update the state\n\t */\n\thandleFieldChange = event => {\n    const {value, name, text} = event.target;\n    \n    if (event == 'anymonous') {\n      this.setState({\n        nickname: event\n      });\n      \n    } else {\n      this.setState({\n        [name]: value\n      });\n    }\n\t\t\n\t};\n\n\n\t/**\n\t * Form submit handler\n\t */\n\tonSubmit(event) {\n\t\tevent.preventDefault();\n\n\t\tif (!this.isFormValid()) {\n\t\t\tthis.setState({error: 'All fields are required.'});\n\t\t\treturn;\n\t\t}\n\n\t\t// loading status and clear error\n\t\tthis.setState({error: '', loading: true});\n\n\t\t// persist the comments on server\n\t\tlet {data} = this.state;\n\t\tfetch('/comments/insertComment', {\n\t\t\tmethod: 'post',\n\t\t\tbody: JSON.stringify({\n\t\t\t\tnickname: this.state.nickname,\n\t\t\t\tcomment: this.state.comment,\n\t\t\t\trating: this.state.rating, \n\t\t\t\tbookid: this.state.bookid,\n\t\t\t\tuserid: this.state.userid\n\t\t\t}),\n\t\t\theaders: {'Content-Type': 'application/json'}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.error) {\n\t\t\t\t\tthis.setState({loading: false, error: res.error});\n\t\t\t\t} else {\n\t\t\t\t\t// add time return from api and push comment to parent state\n\t\t\t\t\t// comment.rating = res.rating;\n\t\t\t\t\tthis.props.addComment({\n\t\t\t\t\t\tnickname: this.state.nickname,\n\t\t\t\t\t\tcomment: this.state.comment,\n\t\t\t\t\t\trating: this.state.rating, \n\t\t\t\t\t\tbookid: this.state.bookid,\n\t\t\t\t\t\tuserid: this.state.userid\n\t\t\t\t\t});\n\n\t\t\t\t\t//clear the message box\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\tcomments: {...data, comment: ''}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tthis.setState({\n\t\t\t\t\terror: 'Something went wrong while submitting form.',\n\t\t\t\t\tloading: false\n\t\t\t\t});\n      });\n      \n      /**this is to check if the user bought a buy to comment */\n      fetch('/comments/isPurchased', {\n        method: 'POST',\n        body: JSON.stringify({\n            bookid: this.props.bookid,\n            userid: this.state.userid,\n        }),\n        headers: { 'Content-Type': 'application/json' }\n    }).then(res => res.json()).then(res => {\n          if (res.decision === false) {\n\t\t\tthis.setState({loading: false, error: res.error});\n\t\t\talert(\"you need to buy the book in order to comment and rate it\");\n          } else {\n            this.setState({\n             decision: true})\n          }     \n    }).catch(err => {\n\t   alert(\"you need to buy the book in order to comment and rate it\");\n      this.state({\n        error: 'You need to buy the book in order to comment and rate it',\n        loading: false,\n      })\n    });\n}\n\t\n\n\tisFormValid() {\n\t\treturn (\n\t\t\t//this.state.nickname !== '' &&\n\t\t\tthis.state.comment !== '' &&\n\t\t\tthis.state.rating !== 0\n\t\t);\n\t}\n\n\trenderError() {\n\t\treturn this.state.error ? (\n\t\t\t<div className='alert alert-danger'>{this.state.error}</div>\n\t\t) : null;\n\t}\n\n\t// getNickname = event => {\n\t// \t//const {value, text} = event.target;\n\t// \tif (event == 'anonymous') {\n\t// \t\tthis.setState({\n\t// \t\t\t...this.state,\n\t// \t\t\tnickname: 'anonymous' // setting to anonymous\n\t// \t\t});\n\t// \t} else {\n\t// \t\tthis.setState({\n\t// \t\t\t...this.state,\n\t// \t\t\t[text]: value // setting the value nickname\n\t// \t\t});\n\t// \t}\n\t// };\n\n\trender() {\n\t\tconst friendOptions = [\n\t\t\t{\n\t\t\t\tkey: this.state.nickname,\n\t\t\t\ttext: this.state.nickname,\n\t\t\t\tvalue: this.state.nickname,\n\t\t\t\timage: {\n\t\t\t\t\tavatar: true,\n\t\t\t\t\tsrc: `https://ui-avatars.com/api/?name=${this.state.nickname}?rounded=true`\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'anonymous',\n\t\t\t\ttext: 'anonymous',\n\t\t\t\tvalue: 'anonymous',\n\t\t\t\timage: {\n\t\t\t\t\tavatar: true,\n\t\t\t\t\tsrc: `https://ui-avatars.com/api/?name=anonymous?rounded=true`\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t];\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{/* <p>{this.state.userid}</p>\n\t\t\t\t<p>{this.state.bookid}</p>\n\t\t\t\t<p>{this.state.nickname}</p> */}\n\n\t\t\t\t<form method='post' onSubmit={this.onSubmit}>\n\t\t\t\t\t{/* <div className='form-group'>\n            <input\n              onChange={this.handleFieldChange}\n              value={this.state.nickname}\n              className='form-control'\n              placeholder='🙂 Your Nickname'\n              name='nickname'\n              type='text'\n            />\n          </div> */}\n\n\t\t\t\t\t<Dropdown\n\t\t\t\t\t\tplaceholder='Select Your Nickname'\n\t\t\t\t\t\tfluid\n\t\t\t\t\t\tselection\n\t\t\t\t\t\toptions={friendOptions}\n\t\t\t\t\t\tonChange={this.getNickname}\n\t\t\t\t\t\tonChange={this.handleFieldChange}\n\t\t\t\t\t/>\n          <br/>\n\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tonChange={this.handleFieldChange}\n\t\t\t\t\t\t\tvalue={this.state.comment}\n\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\tplaceholder='📚 Your Comment'\n\t\t\t\t\t\t\tname='comment'\n\t\t\t\t\t\t\trows='5'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{this.renderError()}\n\n\t\t\t\t\t<div className='star-rating'>\n\t\t\t\t\t\t{[...Array(this.state.totalStars)].map((x, i) => (\n\t\t\t\t\t\t\t<Star\n\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\tselected={i < this.state.rating}\n\t\t\t\t\t\t\t\tonClick={() => this.starChange(i + 1)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{this.state.rating} of {this.state.totalStars} stars\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<br />\n\n\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tdisabled={this.state.loading}\n\t\t\t\t\t\t\tclassName='btn btn-primary'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tComment ➤\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\nexport default FormComponent;\n","import React, { Component } from \"react\";\nimport CommentList from \"../CommentList\";\nimport FormComponent from \"../FormComponent\";\nimport Context from \"../Context\";\nimport { Link } from \"react-router-dom\";\n\nexport default class CommentSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: [],\n      loading: false,\n      bookid: this.props.bookid\n    };\n\n    this.addComment = this.addComment.bind(this);\n  }\n\n  /**\n   *\n   * @param {Adcomment} comment\n   */\n  addComment(comment) {\n    this.setState({\n      loading: false,\n      comments: [comment, ...this.state.comments]\n    });\n  }\n\n  // componentDidMount() {\n  //   //loading\n  //   this.setState({ loading: true });\n\n  //   //get all the comments\n  //   fetch(\"/api/comments\")\n  //     .then(res => res.json())\n  //     .then(comments => {\n  //       this.setState(\n  //         {\n  //           comments: comments,\n  //           loading: false\n  //         },\n  //         () => console.log(\"Comments fetched..\", comments)\n  //       );\n  //     });\n  //   // .catch(err => {\n  //   //   this.setState({ loading: false });\n  //   // });\n  // }\n\n  componentDidMount() {\n    //loading mode\n    this.setState({ loading: true });\n\n    fetch(\"/personal-info\", {\n      method: \"POST\",\n      body: JSON.stringify({ username: this.props.username }),\n      headers: { \"Content-Type\": \"application/json\" }\n    })\n      .then(res => res.json())\n      .then(personalInfo =>\n        this.setState({\n          nickname: personalInfo.nickname\n        })\n      )\n      .catch(err => {\n        console.log(err);\n      });\n\n    //get all the comments\n    fetch(\"/comments/getComments\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        bookid: this.props.bookid\n      }),\n      headers: { \"Content-Type\": \"application/json\" }\n    })\n      .then(res => res.json())\n      .then(res => {\n        this.setState({\n          comments: res,\n\n          loading: false\n        });\n      })\n      .catch(err => {\n        this.setState({ loading: false });\n      });\n  }\n  form() {\n    if (this.props.isLoggedIn) {\n      return (\n        <FormComponent\n          addComment={this.addComment}\n          username={this.props.username}\n          bookid={this.props.bookid}\n          nickname={this.props.nickname}\n        />\n      );\n    } else {\n      return (\n        <div class='ohoh'>\n          <p class='lead'>Looks like you're not logged in!</p>\n          <p class='lead'>Click below to get to the login page.</p>\n          <hr class='my-4' />\n          <p class='lead'>\n            <Link to='/login'>\n              <button type='button' class='btn btn-outline-primary btn-block'>\n                Take Me There!\n              </button>\n            </Link>\n          </p>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    // const loadingSpin = this.state.loading ? \"App-logo Spin\" : \"App-logo\";\n    // const { comments, loading } = this.state;\n    return (\n      <Context.Consumer>\n        {context => (\n          <React.Fragment>\n            <div className='App container bg-light shadow'>\n              <div className='row'>\n                <div className='col-4  pt-3 border-right'>\n                  {this.form()}\n                </div>\n                <div className='col-8  pt-3 bg-white'>\n                  {/* Comment List Component */}\n                  <CommentList\n                    loading={this.state.loading}\n                    comments={this.state.comments}\n                  />\n                </div>\n              </div>\n            </div>\n          </React.Fragment>\n        )}\n      </Context.Consumer>\n    );\n  }\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Icon } from 'semantic-ui-react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        position: 'absolute',\n        width: 600,\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3)\n    }\n}));\n\nclass MyForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedOption: 'option1',\n            names: ['Wishlist1', 'Wishlist2', 'Wishlist3']\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(evt) {\n        this.setState({selectedOption: evt.target.value});\n    }\n\n    componentDidMount() {\n        fetch('/wishlist/getNames', {\n            method: 'POST',\n            body: JSON.stringify({\n                userid: this.props.username\n            }),\n            headers: { 'Content-Type': 'application/json' }\n        })\n        .then(res => res.json())\n        .then(data => {\n            this.setState({ names: data });\n        })\n    }\n\n    mySubmitHandler = event => {\n        event.preventDefault();\n        var listnum = 1;\n        if (this.state.selectedOption === 'option1') {\n            listnum = 1;\n        } else if (this.state.selectedOption === 'option2') {\n            listnum = 2;\n        } else {\n            listnum = 3;\n        }\n\n        fetch('/wishlist/addToWish', {\n            method: 'POST',\n            body: JSON.stringify({\n                userid: this.props.username,\n                bookid: this.props.bookid,\n                listnum: listnum\n            }),\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(res => res.json())\n            .then(result => {\n                if (result.decision == true) {\n                    alert('Book added to Wishlist');\n                } else {\n                    alert('Book is already in Wishlist!');\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n        this.props.closeMethod();\n    }\n\n    render() {\n        if (this.props.isLoggedIn) {\n            return (\n                <form onSubmit={this.mySubmitHandler}>\n                    <h2 id='simple-modal-title'>Select Wishlist</h2>\n                    <p>Add Book to a Wishlist</p>\n                    <div classname='radio'>\n                        <label>\n                            <input type='radio' value='option1'\n                            checked={this.state.selectedOption === 'option1'}\n                            onChange={this.handleChange}/>\n                            {this.state.names[0]}\n                        </label>\n                    </div>\n                    <div classname='radio'>\n                        <label>\n                            <input type='radio' value='option2'\n                            checked={this.state.selectedOption === 'option2'}\n                            onChange={this.handleChange}/>\n                            {this.state.names[1]}\n                        </label>\n                    </div>\n                    <div classname='radio'>\n                        <label>\n                            <input type='radio' value='option3'\n                            checked={this.state.selectedOption === 'option3'}\n                            onChange={this.handleChange}/>\n                            {this.state.names[2]}\n                        </label>\n                    </div>\n                    <button type='submit' class='btn btn-outline-secondary'>\n                        Submit\n                    </button>\n                </form>\n            );\n        }\n        else {\n            return (\n                <div>\n                    <p>Looks like you aren't logged in</p>\n                    <Link to='/login'>\n                    <button\n                                type='button'\n                                class='btn btn-outline-primary btn-block'\n                            >\n                                Login\n                            </button>\n                    </Link>\n                </div>\n            );\n        }\n    }\n}\n\nexport default function SimpleModal(props) {\n    let names = ['Wishlist1', 'Wishlist2', 'Wishlist3'];\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleCart = () => {\n        if (props.isLoggedIn) {\n            fetch('/cart/insert', {\n                method: 'POST',\n                body: JSON.stringify({\n                    username: props.username,\n                    bookID: props.bookid,\n                    quantity: 1,\n                    price: props.price,\n                    title: props.title\n                }),\n                headers: { 'Content-Type': 'application/json' }\n            })\n            .then(res => res.json())\n            .then(() => {\n                alert('Book added to Cart!');\n            })\n            .catch(err => {\n                alert('Error adding book to Cart!');\n            })\n        } else {\n            setOpen(true);\n        }\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Button\n                size=\"lg\" style={{ width: \"30%\", marginRight:\"5vw\"}}\n                type='button'\n                class='floated'\n                onClick={handleOpen}>Save to Wishlist\n            </Button>\n            <Button\n                size=\"lg\" style={{ width: \"30%\", marginRight:\"5vw\"}}\n                type='button'\n                class='floated'\n                onClick={handleCart}>Save to Cart\n            </Button>\n            <Modal\n                aria-labelledby='simple-modal-title'\n                aria-describedby='simple-modal-description'\n                open={open}\n                onClose={handleClose}\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <MyForm\n                        username={props.username}\n                        closeMethod={handleClose}\n                        bookid={props.bookid}\n                        isLoggedIn={props.isLoggedIn}\n                    />\n                </div>\n            </Modal>\n        </div>\n    );\n}","// gonna make book card a click event\n//include a readmore click event\n\nimport React from 'react';\nimport {Button} from 'react-bootstrap';\nimport {Icon} from 'semantic-ui-react';\nimport {useParams} from 'react-router-dom';\nimport {Link} from 'react-router-dom';\nimport ModalImage from 'react-modal-image';\nimport Context from '../Context';\nimport CommentSection from './CommentSection';\nimport WishlistModal from '../WishlistModal';\n\nclass DetailsSection extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tbookData: {\n\t\t\t\tauthor: 'Author Name',\n\t\t\t\tauthorid: 999,\n\t\t\t\tbookDesc: 'Book Description',\n\t\t\t\tbookid: 9999,\n\t\t\t\tdate: '1000-01-01',\n\t\t\t\tgenre: 'A Genre',\n\t\t\t\timagelink: 'A URL',\n\t\t\t\tprice: 0.99,\n\t\t\t\tpublisher: \"Publisher's Inc\",\n\t\t\t\trating: 1,\n\t\t\t\ttitle: 'Book Title'\n\t\t\t},\n\n\t\t\tauthorData: {\n\t\t\t\tauthorid: 999,\n\t\t\t\tbio: \"Author's Life History\",\n\t\t\t\tname: 'Author Name',\n\t\t\t\timg: 'A URL'\n\t\t\t},\n\n\t\t\tcommentData: []\n\t\t};\n\t\tthis.getStars = this.getStars.bind(this);\n\t\tthis.getAverage = this.getAverage.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('/books/getBook', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({\n\t\t\t\tbookid: this.props.bookid\n\t\t\t}),\n\t\t\theaders: {'Content-Type': 'application/json'}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(details => {\n\t\t\t\tconsole.log(details.result[0].authorid);\n\t\t\t\tfetch('/books/getAuthInfo', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tauthorid: details.result[0].authorid\n\t\t\t\t\t}),\n\t\t\t\t\theaders: {'Content-Type': 'application/json'}\n\t\t\t\t})\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(author => {\n\t\t\t\t\t\tthis.setState({authorData: author.result[0]});\n\t\t\t\t\t\tconsole.log(this.state.authorData);\n\t\t\t\t\t});\n\t\t\t\tthis.setState({bookData: details.result[0]});\n\t\t\t\tconsole.log(this.state.bookData);\n\t\t\t});\n\t\tfetch('/books/getComments', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({\n\t\t\t\tbookid: this.props.bookid\n\t\t\t}),\n\t\t\theaders: {'Content-Type': 'application/json'}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(details => {\n\t\t\t\tthis.setState({commentData: details});\n\t\t\t});\n\t}\n\n\tgetAverage() {\n\t\tlet rating = 0,\n\t\t\tcommList = this.state.commentData;\n\t\tif (this.state.commentData.length > 0) {\n\t\t\trating =\n\t\t\t\tcommList\n\t\t\t\t\t.map(comment => comment.rating)\n\t\t\t\t\t.reduce((total, val) => {\n\t\t\t\t\t\ttotal += val;\n\t\t\t\t\t\treturn total;\n\t\t\t\t\t}) / commList.length;\n\t\t\tconsole.log('RATING: ' + rating);\n\t\t}\n\t\treturn this.getStars(rating);\n\t}\n\n\tgetStars(rating) {\n\t\tlet count = 0;\n\t\tlet stars = [];\n\t\twhile (count < rating) {\n\t\t\tstars.push(<i class='fas fa-star'></i>);\n\t\t\tcount++;\n\t\t}\n\n\t\twhile (count < 5) {\n\t\t\tstars.push(<i class='far fa-star'></i>);\n\t\t\tcount++;\n\t\t}\n\t\treturn stars;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div clsas='book-container'>\n\t\t\t\t<div class='book-body'>\n\t\t\t\t\t<h1>{this.props.text}</h1>\n\n\t\t\t\t\t<div class='book-imgcontainer'>\n\t\t\t\t\t\t<ModalImage\n\t\t\t\t\t\t\tsmall={this.state.bookData.imagelink}\n\t\t\t\t\t\t\tlarge={this.state.bookData.imagelink}\n\t\t\t\t\t\t\tclassName='card-top'\n\t\t\t\t\t\t\talt={this.state.bookData.title}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class='book-details'>\n\t\t\t\t\t\t<h1>{this.state.bookData.title}</h1>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\tpathname:\n\t\t\t\t\t\t\t\t\t'/author/' + this.state.bookData.author\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<h2 id='subtitle'>{this.state.bookData.author}</h2>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tPublished By <b>{this.state.bookData.publisher}</b>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<div id='book-rating'>\n\t\t\t\t\t\t\t<div id='stars'>\n\t\t\t\t\t\t\t\t{this.getAverage(this.state.bookData.rating)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p id='rating-text'>\n\t\t\t\t\t\t\t\t{this.state.commentData.length} Reviews\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h3>${this.state.bookData.price}</h3>\n\t\t\t\t\t\t<p>{this.state.bookData.bookDesc}</p>\n\t\t\t\t\t\t<div class='book-rating'>\n\t\t\t\t\t\t\t<WishlistModal\n\t\t\t\t\t\t\t\tusername={this.props.username}\n\t\t\t\t\t\t\t\tisLoggedIn={this.props.isLoggedIn}\n\t\t\t\t\t\t\t\tbookid={this.state.bookData.bookid}\n\t\t\t\t\t\t\t\tprice={this.state.bookData.price}\n\t\t\t\t\t\t\t\ttitle={this.state.bookData.title}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class='section'>\n\t\t\t\t\t<h1>About the Author</h1>\n\t\t\t\t\t<div class='author-details'>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclass='author-img'\n\t\t\t\t\t\t\tsrc={this.state.authorData.img}\n\t\t\t\t\t\t></img>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<h1 style={{marginBottom: '3%'}}>\n\t\t\t\t\t\t\t\t{this.state.bookData.author}\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t{this.state.authorData.bio}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class='section'>\n\t\t\t\t\t<h1>Comments</h1>\n\t\t\t\t\t{/* <Context.Provider value={{state: this.state.bookData}}>\n                    <Link to={{pathname:\"/comments\" + \"/book/\" + this.props.bookid }} >\n                    <Button size=\"lg\" style={{ width: \"30%\", marginRight:\"5vw\" }}>Comments</Button>\n                    </Link>\n                    </Context.Provider> */}\n\t\t\t\t\t<Context.Consumer>\n\t\t\t\t\t\t{context => (\n\t\t\t\t\t\t\t<CommentSection\n\t\t\t\t\t\t\t\tbookid={this.props.bookid}\n\t\t\t\t\t\t\t\timagelink={this.state.bookData.imagelink}\n\t\t\t\t\t\t\t\ttitle={this.state.bookData.title}\n\t\t\t\t\t\t\t\tusername={context.username}\n\t\t\t\t\t\t\t\tisLoggedIn={context.isLoggedIn}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Context.Consumer>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DetailsSection;\n","import React from 'react';\nimport Header from '../Header';\nimport Footer from '../Footer';\nimport DetailsSection from '../screens/BookDetailsSection';\nimport {withRouter} from 'react-router-dom';\nimport Context from '../Context';\n\nclass ViewBookPage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Context.Consumer>\n\t\t\t\t\t{context => (\n\t\t\t\t\t\t<div className='body'>\n\t\t\t\t\t\t\t<DetailsSection\n\t\t\t\t\t\t\t\tbookid={this.props.match.params.id}\n                                username={context.username}\n                                isLoggedIn={context.isLoggedIn}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Footer />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Context.Consumer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ViewBookPage;\n","import React from \"react\";\nimport BookCard from '../BookCard'\nimport { Button } from \"react-bootstrap\";\n\nclass AuthorWorksSection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            relatedBooks: [],\n        }\n    }\n\n    componentDidMount(){\n        fetch('/books')\n            .then(res => res.json())\n            .then(books =>{\n                this.setState({relatedBooks: books.filter(book => book.author === this.props.author)});\n            });\n    }\n\n    render() {\n        console.log(this.state.relatedBooks)\n        const card = this.state.relatedBooks.map(book =>\n        <BookCard\n                            username={\"context.username\"}\n                            isLoggedIn={false}\n                            bookID={book.bookid}\n                            title={book.title}\n                            author={book.author}\n                            genre={book.genre}\n                            price={book.price}\n                            rating={book.rating}\n                            date={book.date}\n                            image={book.imagelink}\n                        />)\n        return (\n            <div class=\"author-container\">\n                <h1>{this.props.author}'s Other Works</h1>\n                <p>Check out what we have in stock for {this.props.author}!</p>\n                <div class=\"author-body\">{card}</div>\n            </div>\n        );\n    }\n}\n\nexport default AuthorWorksSection;\n","import React from \"react\";\nimport AuthorWorksSection from '../screens/AuthorWorksSection'\nimport Navbar from \"../NavBar\";\nimport Footer from \"../Footer\";\n\nclass Body extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className='body'>\n                <AuthorWorksSection author={this.props.match.params.name}/>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default Body;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\nfunction rand() {\n\treturn Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n\tconst top = 50 + rand();\n\tconst left = 50 + rand();\n\n\treturn {\n\t\ttop: `${top}%`,\n\t\tleft: `${left}%`,\n\t\ttransform: `translate(-${top}%, -${left}%)`\n\t};\n}\n\nconst useStyles = makeStyles(theme => ({\n\tpaper: {\n\t\tposition: 'absolute',\n\t\twidth: 600,\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tborder: '1px solid #000',\n\t\tboxShadow: theme.shadows[5],\n\t\tpadding: theme.spacing(2, 4, 3)\n\t}\n}));\n\nclass MyForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {username: this.props.username, newPassword: ''};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\thandleChange(evt) {\n\t\tthis.setState({[evt.target.name]: evt.target.value});\n\t}\n\n\tmySubmitHandler = event => {\n\t\tevent.preventDefault();\n\n\t\tfetch('/personal-info/change-password', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({\n\t\t\t\tusername: this.props.username,\n\t\t\t\tnewPassword: this.state.newPassword\n\t\t\t}),\n\t\t\theaders: {'Content-Type': 'application/json'}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\n\t\talert('Submitted!');\n\t\tthis.props.closeMethod();\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={this.mySubmitHandler}>\n\t\t\t\t<p>Enter New Password:</p>\n\t\t\t\t<input\n\t\t\t\t\ttype='password'\n\t\t\t\t\tname='newPassword'\n\t\t\t\t\tpattern='(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}'\n\t\t\t\t\ttitle='Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters'\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tclassName='form-control'\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<button type='submit' class='btn btn-outline-secondary'>\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default function SimpleModal(props) {\n\tconst classes = useStyles();\n\t// getModalStyle is not a pure function, we roll the style only on the first render\n\tconst [modalStyle] = React.useState(getModalStyle);\n\tconst [open, setOpen] = React.useState(false);\n\n\tconst handleOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<button\n\t\t\t\ttype='button'\n\t\t\t\tclass='btn btn-link btn-lg'\n\t\t\t\tonClick={handleOpen}\n\t\t\t>\n\t\t\t\tCHANGE PASSWORD\n\t\t\t</button>\n\t\t\t<Modal\n\t\t\t\taria-labelledby='simple-modal-title'\n\t\t\t\taria-describedby='simple-modal-description'\n\t\t\t\topen={open}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t<div style={modalStyle} className={classes.paper}>\n\t\t\t\t\t<h2 id='simple-modal-title'>Enter a new Password:</h2>\n\t\t\t\t\t<MyForm\n\t\t\t\t\t\tusername={props.username}\n\t\t\t\t\t\tcloseMethod={handleClose}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport ChangePasswordModal from './ChangePasswordModal';\n\nimport PropTypes from 'prop-types';\nimport Context from '../Context';\n\nclass Personal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: this.props.username,\n            personalInfo: [],\n            email: '',\n            fname: '',\n            lname: '',\n            nickname: '',\n            inEditMode: false,\n            loading: true\n        };\n        this.handleChange = this.handleChange.bind(this);\n\n        \n    }\n\n    static contextTypes = {\n        router: PropTypes.shape({\n            history: PropTypes.shape({\n                push: PropTypes.func.isRequired,\n                replace: PropTypes.func.isRequired\n            }).isRequired,\n            staticContext: PropTypes.object\n        }).isRequired\n    };\n\n    componentDidMount() {\n        this.getInfo();\n    }\n\n    getInfo() {\n        fetch('/personal-info', {\n            method: 'POST',\n            body: JSON.stringify({username: this.state.username}),\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(res => res.json())\n            .then(personalInfo =>\n                this.setState({\n                    personalInfo: personalInfo,\n                    loading: false,\n                    email: personalInfo.email,\n                    fname: personalInfo.fname,\n                    lname: personalInfo.lname,\n                    nickname: personalInfo.nickname\n                })\n            )\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    mySubmitHandler = event => {\n        event.preventDefault();\n\n        fetch('/personal-info/edit', {\n            method: 'POST',\n            body: JSON.stringify({\n                username: this.state.username,\n                email: this.state.email,\n                fname: this.state.fname,\n                lname: this.state.lname,\n                nickname: this.state.nickname,\n                username: this.state.username\n            }),\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(res => res.json())\n            // .then(newInfo => {\n            //     //look at address-info for return values\n            //     this.getInfo();\n            // })\n             \n            .catch(err => {\n                console.log(err);\n            })\n            .then(alert('Submitted!'),\n           \n            );\n    };\n\n    changeEditMode = () => {\n        this.setState({inEditMode: true});\n    };\n\n    handleChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    renderEditView = () => {\n     \n\n          \n        return (\n           \n            <div>\n                <div className='info-card'>\n                    <form onSubmit={this.mySubmitHandler}>\n                        <div className='info-card-lc'>\n                            <h1>\n                                First Name:{' '}\n                                <input\n                                    type='text'\n                                    className='form-control'\n                                    name='fname'\n                                    onChange={this.handleChange}\n                                    value={this.state.fname}\n                                />\n                            </h1>\n                            <h1>\n                                Last Name:{' '}\n                                <input\n                                    type='text'\n                                    className='form-control'\n                                    name='lname'\n                                    onChange={this.handleChange}\n                                    value={this.state.lname}\n                                />\n                            </h1>\n                            <h1>\n                                Email:{' '}\n                                <input\n                                    type='text'\n                                    className='form-control'\n                                    name='email'\n                                    onChange={this.handleChange}\n                                    value={this.state.email}\n                                />\n                            </h1>\n                            <h1>\n                                Username:{' '}\n                                <input\n                                    type='text'\n                                    className='form-control'\n                                    name='username'\n                                    onChange={this.handleChange}\n                                    value={this.state.username}\n                                />\n                            </h1>\n                            <h1>\n                                Nickname:{' '}\n                                <input\n                                    type='text'\n                                    className='form-control'\n                                    name='nickname'\n                                    onChange={this.handleChange}\n                                    value={this.state.nickname}\n                                />\n                            </h1>\n                        </div>\n                        <div className='info-card-rc'>\n                            <button\n                                type='submit'\n                                class='btn btn-link btn-lg'\n                                onClick={event => this.mySubmitHandler(event)}\n                            >\n                                SAVE\n                            </button>\n                        </div>\n                    </form>\n                    \n                </div>\n            </div>\n           \n         \n        );\n    };\n\n    renderDefaultView = () => {\n        return (\n            <div>\n                <div className='info-card'>\n                    <div className='info-card-lc'>\n                        <h1>First Name: {this.state.personalInfo.fname}</h1>\n                        <h1>Last Name: {this.state.personalInfo.lname}</h1>\n                        <h1>Email: {this.state.personalInfo.email}</h1>\n                        <h1>Username: {this.state.personalInfo.userid}</h1>\n                        <h1>Nickname: {this.state.personalInfo.nickname}</h1>\n                    </div>\n                    <div className='info-card-rc'>\n                        <button\n                            type='button'\n                            class='btn btn-link btn-lg'\n                            onClick={() => this.changeEditMode()} //need form to input cc\n                        >\n                            EDIT\n                        </button>\n                        <ChangePasswordModal username={this.props.username} />\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                {this.state.loading ? (\n                    <LinearProgress />\n                ) : this.state.inEditMode ? (\n                    this.renderEditView()\n                ) : (\n                    this.renderDefaultView()\n                )}\n            </div>\n        );\n    }\n}\n\nexport default Personal;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        position: 'absolute',\n        width: 600,\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3)\n    }\n}));\n\nclass MyForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {ccnum: '', cvv: '', name: '', zip: '', expdate: ''};\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(evt) {\n        this.setState({[evt.target.name]: evt.target.value});\n    }\n\n    mySubmitHandler = event => {\n        console.log(this.state.ccnum);\n\n        event.preventDefault();\n\n        fetch('/credit-info/insert', {\n            method: 'POST',\n            body: JSON.stringify({\n                username: this.props.username,\n                ccnum: this.state.ccnum,\n                cvv: this.state.cvv,\n                name: this.state.name,\n                zip: this.state.zip,\n                expdate: this.state.expdate\n            }),\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(res => res.json())\n            .then(newInfo => {\n                //look at address-info for return values\n                this.getInfo();\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\n        alert('Submitted!');\n        this.props.closeMethod();\n        this.props.getInfo();\n    };\n    render() {\n        return (\n            <form onSubmit={this.mySubmitHandler}>\n                <p>Enter Credit Card Number:</p>\n                <input\n                    type='text'\n                    name='ccnum'\n                    onChange={this.handleChange}\n                    minlength='16'\n                    maxlength='16'\n                    required\n                    className='form-control'\n                />\n                <p>Enter Expiration Date:</p>\n                <input\n                    type='date'\n                    name='expdate'\n                    onChange={this.handleChange}\n                    placeholder='Format: Year/Month/Date'\n                    min='2019-11-02'\n                    required\n                    className='form-control'\n                />\n                <p>Enter CVV:</p>\n                <input\n                    type='text'\n                    name='cvv'\n                    onChange={this.handleChange}\n                    minlength='3'\n                    maxlength='4'\n                    required\n                    className='form-control'\n                />\n                <p>Enter Name On Card:</p>\n                <input\n                    type='text'\n                    name='name'\n                    onChange={this.handleChange}\n                    required\n                    className='form-control'\n                />\n                <p>Enter Zip:</p>\n                <input\n                    type='text'\n                    name='zip'\n                    onChange={this.handleChange}\n                    minlength='5'\n                    maxlength='5'\n                    required\n                    className='form-control'\n                />\n                <br />\n                <br />\n                <button type='submit' class='btn btn-outline-secondary'>\n                    Submit\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default function SimpleModal(props) {\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <button\n                type='button'\n                class='btn btn-link btn-lg'\n                onClick={handleOpen}\n            >\n                ADD\n            </button>\n            <Modal\n                aria-labelledby='simple-modal-title'\n                aria-describedby='simple-modal-description'\n                open={open}\n                onClose={handleClose}\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <h2 id='simple-modal-title'>Add A New Credit Card</h2>\n                    <MyForm\n                        username={props.username}\n                        closeMethod={handleClose}\n                        getInfo={props.getInfo}\n                    />\n                </div>\n            </Modal>\n        </div>\n    );\n}\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CreditAddModal from '../profile/CreditAddModal';\nimport Context from '../Context';\n\nclass Credit extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: this.props.username,\n            creditInfo: [],\n            inEditMode: false,\n            loading: true\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.getInfo();\n    }\n\n    getInfo() {\n        fetch('/credit-info', {\n            method: 'POST',\n            body: JSON.stringify({username: this.props.username}),\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(res => res.json())\n            .then(newInfo => {\n                this.setState({\n                    creditInfo: newInfo,\n                    loading: false\n                });\n                console.log(this.state);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    handleRefresh = () => this.getInfo();\n\n    handleInsert(newEntry) {\n        fetch('/credit-info/insert', {\n            method: 'POST',\n            body: JSON.stringify({\n                username: this.props.username,\n                info: newEntry\n            }),\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(res => res.json())\n            .then(newInfo => {\n                this.getInfo();\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    handleDelete(entry) {\n        fetch('/credit-info/delete', {\n            method: 'POST',\n            body: JSON.stringify({\n                username: this.props.username,\n                ccnum: entry\n            }),\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(res => res.json())\n            .then(newInfo => {\n                this.getInfo();\n                alert('Deleted!');\n            })\n            .catch(err => {\n                console.log('Hello ' + err);\n            });\n    }\n\n    mySubmitHandler = event => {\n        event.preventDefault();\n\n        fetch('/personal-info/edit', {\n            method: 'POST',\n            body: JSON.stringify({\n                ccnum: this.state.ccnum,\n                cvv: this.state.cvv,\n                name: this.state.name,\n                zip: this.state.zip,\n                expdate: this.state.expdate,\n                username: this.state.username\n            }),\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(res => res.json())\n            // .then(newInfo => {\n            //     //look at address-info for return values\n            //     this.getInfo();\n            // })\n            .catch(err => {\n                console.log(err);\n            });\n\n        alert('Submitted!');\n    };\n\n    changeEditMode = () => {\n        this.setState({inEditMode: true});\n    };\n\n    handleChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    render() {\n        const card = this.state.creditInfo.map(creditInfo => (\n            <div>\n                <div className='info-card'>\n                    <div className='info-card-lc'>\n                        <h1>Credit Card Number: {creditInfo.ccnum}</h1>\n                        <h1>Expiration Date: {creditInfo.expdate}</h1>\n                        <h1>CVV: {creditInfo.cvv}</h1>\n                        <h1>Name On Card: {creditInfo.name}</h1>\n                        <h1>Zip: {creditInfo.zip}</h1>\n                    </div>\n                    <div className='info-card-rc'>\n                        <button\n                            type='button'\n                            class='btn btn-link btn-lg'\n                            onClick={() => this.handleDelete(creditInfo.ccnum)}\n                        >\n                            DELETE\n                        </button>\n                    </div>\n                </div>\n            </div>\n        ));\n\n        const result = (\n            <Context.Consumer>\n                {context => (\n                    <div className='profile-card'>\n                        <div className='profile-card-header'>\n                            <h1 className='display-4 '>Credit Cards On File</h1>\n                            <CreditAddModal\n                                username={context.username}\n                                getInfo={this.handleRefresh}\n                            />\n                        </div>\n                        <div className='profile-card-content'>{card}</div>\n                    </div>\n                )}\n            </Context.Consumer>\n        );\n\n        return <div>{this.state.loading ? <LinearProgress /> : result}</div>;\n    }\n}\n\nexport default Credit;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        position: 'absolute',\n        width: 600,\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3)\n    }\n}));\n\nclass MyForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {state: '', city: '', address: '', zip: ''};\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(evt) {\n        this.setState({[evt.target.name]: evt.target.value});\n    }\n\n    mySubmitHandler = event => {\n        event.preventDefault();\n\n        fetch('/address-info/insert', {\n            method: 'POST',\n            body: JSON.stringify({\n                username: this.props.username,\n                state: this.state.state,\n                city: this.state.city,\n                address: this.state.address,\n                zip: this.state.zip\n            }),\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(res => res.json())\n            .catch(err => {\n                console.log(err);\n            });\n\n        alert('Submitted!');\n        this.props.closeMethod();\n        this.props.getInfo();\n    };\n    render() {\n        return (\n            <form onSubmit={this.mySubmitHandler}>\n                <p>Enter Address:</p>\n                <input\n                    type='text'\n                    name='address'\n                    onChange={this.handleChange}\n                    className='form-control'\n                    required\n                />\n                <p>Enter City:</p>\n                <input\n                    type='text'\n                    name='city'\n                    onChange={this.handleChange}\n                    className='form-control'\n                    required\n                />\n                <p>Enter State:</p>\n                <input\n                    type='text'\n                    name='state'\n                    onChange={this.handleChange}\n                    className='form-control'\n                    required\n                />\n                <p>Enter Zip:</p>\n                <input\n                    type='text'\n                    name='zip'\n                    onChange={this.handleChange}\n                    className='form-control'\n                    required\n                    minlength='5'\n                    maxlength='5'\n                />\n                <br />\n                <button type='submit' class='btn btn-outline-secondary'>\n                    Submit\n                </button>\n                {/* <input type='submit' value='submit' /> */}\n            </form>\n        );\n    }\n}\n\nexport default function SimpleModal(props) {\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <button\n                type='button'\n                class='btn btn-link btn-lg'\n                onClick={handleOpen}\n            >\n                ADD\n            </button>\n            <Modal\n                aria-labelledby='simple-modal-title'\n                aria-describedby='simple-modal-description'\n                open={open}\n                onClose={handleClose}\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <h2 id='simple-modal-title'>Add A New Address</h2>\n                    <MyForm\n                        username={props.username}\n                        closeMethod={handleClose}\n                        getInfo={props.getInfo}\n                    />\n                </div>\n            </Modal>\n        </div>\n    );\n}\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport AddressAddModal from '../profile/AddressAddModal';\nimport Context from '../Context';\n\nclass Address extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: this.props.username,\n            addressInfo: [],\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        this.getInfo(this.state.username);\n        // console.log(this.state.personalInfo);\n    }\n\n    getInfo() {\n        fetch('/address-info', {\n            method: 'POST',\n            body: JSON.stringify({username: this.state.username}),\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(res => res.json())\n            .then(newInfo => {\n                this.setState({addressInfo: newInfo, loading: false});\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    handleRefresh = () => this.getInfo();\n\n    handleInsert(addressInfo) {\n        fetch('/address-info/insert', {\n            method: 'POST',\n            body: JSON.stringify({\n                username: this.state.username,\n                state: addressInfo.state,\n                city: addressInfo.city,\n                address: addressInfo.address,\n                zip: addressInfo.zip\n            }),\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(res => res.json())\n            .then(newInfo => {\n                //look at address-info for return values\n                this.getInfo();\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    handleDelete(addressInfo) {\n        fetch('/address-info/delete', {\n            method: 'POST',\n            body: JSON.stringify({\n                username: this.state.username,\n                state: addressInfo.state,\n                city: addressInfo.city,\n                address: addressInfo.address,\n                zip: addressInfo.zip\n            }),\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(res => res.json())\n            .then(newInfo => {\n                //look at address-info for return values\n                this.getInfo(this.state.username);\n                alert('Deleted!');\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    render() {\n        const card = this.state.addressInfo.map((addressInfo, key) => (\n            <div>\n                <div className='info-card'>\n                    <div className='info-card-lc'>\n                        <h1>Address: {addressInfo.address}</h1>\n                        <h1>City: {addressInfo.city}</h1>\n                        <h1>State: {addressInfo.state}</h1>\n                        <h1>Zip: {addressInfo.zip}</h1>\n                    </div>\n                    <div className='info-card-rc'>\n                        <button\n                            type='button'\n                            class='btn btn-link btn-lg'\n                            onClick={() => this.handleDelete(addressInfo)}\n                        >\n                            DELETE\n                        </button>\n                    </div>\n                </div>\n            </div>\n        ));\n\n        const result = (\n            <Context.Consumer>\n                {context => (\n                    <div className='profile-card'>\n                        <div className='profile-card-header'>\n                            <h1 className='display-4 '>Addresses On File</h1>\n                            <AddressAddModal\n                                username={context.username}\n                                getInfo={this.handleRefresh}\n                            />\n                        </div>\n                        <div className='profile-card-content'> {card} </div>\n                    </div>\n                )}\n            </Context.Consumer>\n        );\n\n        return <div>{this.state.loading ? <LinearProgress /> : result}</div>;\n    }\n}\n\nexport default Address;\n","import React from 'react';\nimport Footer from '../Footer';\nimport Personal from '../profile/personal';\nimport Credit from '../profile/credit';\nimport Address from '../profile/address';\nimport {Link} from 'react-router-dom';\nimport Context from '../Context';\n\nclass ProfilePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            personalInfo: [],\n            addressInfo: [],\n            creditInfo: []\n        };\n    }\n\n    render() {\n        if (this.props.isLoggedIn) {\n            return (\n                <div>\n                    <Context.Consumer>\n                        {context => (\n                            <div className='body'>\n                                <div className='container' id='profile-page'>\n                                    <h1 className='display-3 '>Welcome Home</h1>\n                                    <hr />\n                                    <div className='profile-card'>\n                                        <div className='profile-card-header'>\n                                            <h1 className='display-4 '>\n                                                Personal Info\n                                            </h1>\n                                        </div>\n\n                                        <div className='profile-card-content'>\n                                            <Personal\n                                                username={context.username}\n                                            />\n                                        </div>\n                                    </div>\n                                    <hr />\n\n                                    <div className='profile-card'>\n                                        <div className='profile-card-content'>\n                                            <Address\n                                                username={context.username}\n                                            />\n                                        </div>\n                                    </div>\n                                    <hr />\n\n                                    <div className='profile-card'>\n                                        <div className='profile-card-content'>\n                                            <Credit\n                                                username={context.username}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <Footer />\n                            </div>\n                        )}\n                    </Context.Consumer>\n                </div>\n            );\n        } else {\n            return (\n                <div class='ohoh'>\n                    <h1 class='display-4'>Oh, Oh!</h1>\n                    <p class='lead'>Looks like you're not logged in!</p>\n                    <p class='lead'>Click below to get to the login page.</p>\n                    <hr class='my-4' />\n                    <p class='lead'>\n                        <Link to='/login'>\n                            <button\n                                type='button'\n                                class='btn btn-outline-primary btn-block'\n                            >\n                                Take Me There!\n                            </button>\n                        </Link>\n                    </p>\n                </div>\n            );\n        }\n    }\n}\n\nexport {ProfilePage};\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Icon } from 'semantic-ui-react';\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        position: 'absolute',\n        width: 600,\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3)\n    }\n}));\n\nclass MyForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {listname: ''};\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(evt) {\n        this.setState({[evt.target.name]: evt.target.value});\n    }\n\n    mySubmitHandler = event => {\n        event.preventDefault();\n\n        fetch('/wishlist/rename', {\n            method: 'POST',\n            body: JSON.stringify({\n                userid: this.props.username,\n                listname: this.state.listname,\n                listnum: this.props.listnum\n            }),\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(res => res.json())\n            .catch(err => {\n                console.log(err);\n            });\n\n        alert('Name Changed!');\n        this.props.closeMethod();\n        this.props.refresh();\n    };\n    render() {\n        return (\n            <form onSubmit={this.mySubmitHandler}>\n                <p>Enter New Wishlist Name:</p>\n                <input\n                    type='text'\n                    name='listname'\n                    onChange={this.handleChange}\n                    className='form-control'\n                    required\n                />\n                <br />\n                <button type='submit' class='btn btn-outline-secondary'>\n                    Submit\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default function SimpleModal(props) {\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <button\n                type='button'\n                class='btn btn-link btn-lg'\n                onClick={handleOpen}\n            >\n                <Icon name=\"edit\"/>\n            </button>\n            <Modal\n                aria-labelledby='simple-modal-title'\n                aria-describedby='simple-modal-description'\n                open={open}\n                onClose={handleClose}\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <h2 id='simple-modal-title'>Edit Wishlist Name</h2>\n                    <MyForm\n                        username={props.username}\n                        closeMethod={handleClose}\n                        listnum={props.listnum}\n                        refresh={props.refresh}\n                    />\n                </div>\n            </Modal>\n        </div>\n    );\n}","import React from 'react';\nimport Footer from './Footer';\nimport { Link } from 'react-router-dom';\nimport { Button, DropdownButton, Dropdown, Modal } from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react';\nimport { Table } from 'reactstrap';\nimport NameModal from './NameModal';\n\n\nclass WishlistPageWrapper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list1: [],\n            list2: [],\n            list3: [],\n            body1: [],\n            body2: [],\n            body3: [],\n            username: this.props.username,\n            names: ['Wishlist1', 'Wishlist2', 'Wishlist3']\n        };\n    }\n\n    handleRefresh = () => this.refresh();\n\n    refresh() {\n        fetch('/wishlist/mount', {\n            method: 'POST',\n            body: JSON.stringify({\n                userid: this.props.username\n            }),\n            headers: { 'Content-Type': 'application/json' }\n        })\n        .then(res => res.json())\n        .then(data => {\n            console.log(data);\n            this.getBody([data.list1, data.list2, data.list3], data.names);\n        }); \n    }\n\n    componentDidMount() {\n        this.refresh();\n        this.forceUpdate();\n    }\n\n    toCart = (bookid, listnum, title) => {\n        fetch('/wishlist/toCart', {\n            method: 'POST',\n            body: JSON.stringify({\n                userid: this.state.username,\n                bookid: bookid,\n                listnum: listnum,\n                title: title\n            }),\n            headers: { 'Content-Type': 'application/json' }\n        })\n        .then(res => res.json())\n        .then(() => {\n            this.refresh();\n        })\n    } \n\n    toWish = (bookid, listnum, othernum) => {\n        fetch('/wishlist/toWish', {\n            method: 'POST',\n            body: JSON.stringify({\n                userid: this.state.username,\n                bookid: bookid,\n                listnum: listnum,\n                othernum: othernum\n            }),\n            headers: { 'Content-Type': 'application/json' }\n        })\n        .then(res => res.json())\n        .then(() => {\n            this.refresh();\n        })\n    }\n\n    remove = (bookid, listnum) => {\n        fetch('/wishlist/remove', {\n            method: 'POST',\n            body: JSON.stringify({\n                userid: this.state.username,\n                bookid: bookid,\n                listnum: listnum\n            }),\n            headers: { 'Content-Type': 'application/json' }\n        })\n        .then(res => res.json())\n        .then(() => {\n            this.refresh();\n        })\n    }\n\n    getNames(username) {\n        fetch('/wishlist/getNames', {\n            method: 'POST',\n            body: JSON.stringify({\n                userid: username\n            }),\n            headers: { 'Content-Type': 'application/json' }\n        })\n        .then(res => res.json())\n        .then(name => {\n            this.refresh();\n        })\n    }\n\n    renameList = (listnum, name) => {\n        fetch('/wishlist/getNames', {\n            method: 'POST',\n            body: JSON.stringify({\n                userid: this.state.username,\n                listnum: listnum,\n                listname: name\n            }),\n            headers: { 'Content-Type': 'application/json' }\n        })\n        .then(res => res.json())\n        .then(() => {\n            this.refresh();\n        })\n    }\n\n    getBody = (list, names) => {\n        let body1 = list[0].map(entry => {\n            return (\n                <tr key={entry.bookid}>\n                    <td class='wishlist'><img class='table-img' src={entry.imagelink}/></td>\n                    <td class='wishlist'>\n                    <Link\n                        to={{ pathname: \"/book/\" + entry.bookid }}>\n                        <p>{entry.title}</p>\n                    </Link>\n                    </td>\n                    <td class='wishlist'>\n                        <button type='button' class='btn btn-outline-dark'\n                            onClick={() => this.toCart(entry.bookid, 1, entry.title)}\n                        >\n                            Move to cart\n                        </button>\n                        <Button\n                            onClick={() => this.remove(entry.bookid, 1)}\n                            style={{\n                                backgroundColor: 'rgba(0,0,0,0)',\n                                border: 'none'\n                            }}\n                        >\n                            <Icon name='close' color='red'/>\n                        </Button>\n                    </td>\n                    <td class='wishlist'>\n                    <DropdownButton \n                        id=\"dropdown-basic-button\" \n                        title=\"Move to other wish list\"\n                    >\n                        <Dropdown.Item \n                            onClick={() => this.toWish(entry.bookid, 1, 2)}>{names[1]}\n                        </Dropdown.Item>\n                        <Dropdown.Item \n                            onClick={() => this.toWish(entry.bookid, 1, 3)}>{names[2]}\n                        </Dropdown.Item>\n                    </DropdownButton>\n                    </td>\n                </tr>\n            );\n        });\n        let body2 = list[1].map(entry => {\n            return (\n                <tr key={entry.bookid}>\n                    <td class='wishlist'><img class='table-img' src={entry.imagelink}/></td>\n                    <td class='wishlist'>\n                    <Link\n                        to={{ pathname: \"/book/\" + entry.bookid }}>\n                        <p>{entry.title}</p>\n                    </Link>\n                    </td>\n                    <td class='wishlist'>\n                        <button type='button' class='btn btn-outline-dark'\n                            onClick={() => this.toCart(entry.bookid, 2, entry.title)}\n                        >\n                            Move to cart\n                        </button>\n                        <Button\n                            onClick={() => this.remove(entry.bookid, 2)}\n                            style={{\n                                backgroundColor: 'rgba(0,0,0,0)',\n                                border: 'none'\n                            }}\n                        >\n                            <Icon name='close' color='red'/>\n                        </Button>\n                    </td>\n                    <td class='wishlist'>\n                    <DropdownButton \n                        id=\"dropdown-basic-button\" \n                        title=\"Move to other wish list\"\n                    >\n                        <Dropdown.Item \n                            onClick={() => this.toWish(entry.bookid, 2, 1)}>{names[0]}\n                        </Dropdown.Item>\n                        <Dropdown.Item \n                            onClick={() => this.toWish(entry.bookid, 2, 3)}>{names[2]}\n                        </Dropdown.Item>\n                    </DropdownButton>\n                    </td>\n                </tr>\n            );\n        });\n        let body3 = list[2].map(entry => {\n            return (\n                <tr key={entry.bookid}>\n                    <td class='wishlist'><img class='table-img' src={entry.imagelink}/></td>\n                    <td class='wishlist'>\n                    <Link\n                        to={{ pathname: \"/book/\" + entry.bookid }}>\n                        <p>{entry.title}</p>\n                    </Link>\n                    </td>\n                    <td>\n                        <button type='button' class='btn btn-outline-dark'\n                            onClick={() => this.toCart(entry.bookid, 3, entry.title)}\n                        >\n                            Move to cart\n                        </button>\n                        <Button\n                            onClick={() => this.remove(entry.bookid, 3)}\n                            style={{\n                                backgroundColor: 'rgba(0,0,0,0)',\n                                border: 'none'\n                            }}\n                        >\n                            <Icon name='close' color='red'/>\n                        </Button>\n                    </td>\n                    <td class='wishlist'>\n                    <DropdownButton \n                        id=\"dropdown-basic-button\" \n                        title=\"Move to other wish list\"\n                    >\n                        <Dropdown.Item \n                            onClick={() => this.toWish(entry.bookid, 3, 1)}>{names[0]}\n                        </Dropdown.Item>\n                        <Dropdown.Item \n                            onClick={() => this.toWish(entry.bookid, 3, 2)}>{names[1]}\n                        </Dropdown.Item>\n                    </DropdownButton>\n                    </td>\n                </tr>\n            );\n        });\n        this.setState({ body1: body1, body2: body2, body3: body3, names: names});\n        this.forceUpdate();\n    }\n\n    render() {\n        return(\n            <div>\n            <div id='purchase-container'>\n                <div id='purchase-body'>\n                    <h2 class='wishlist' style={{ marginBottom: '3%' }}>\n                        { this.state.names[0] }\n                    <NameModal\n                        listnum={1}\n                        username={this.state.username}\n                        refresh={this.handleRefresh}\n                    />\n                    </h2>\n                    <Table class='wishlist'>\n                        <thead>\n                            <tr>\n                                <th>Cover Art</th>\n                                <th>Book Title</th>\n                                <th></th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>{this.state.body1}</tbody>\n                    </Table>\n                </div>\n            </div>\n            <div id='purchase-container'>\n                <div id='purchase-body'>\n                    <h2 class='wishlist' style={{ marginBottom: '3%' }}>\n                        { this.state.names[1] }\n                    <NameModal\n                        listnum={2}\n                        username={this.state.username}\n                        refresh={this.handleRefresh}\n                    />\n                    </h2>\n                    <Table class='wishlist'>\n                        <thead>\n                            <tr>\n                                <th>Cover Art</th>\n                                <th>Book Title</th>\n                                <th></th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>{this.state.body2}</tbody>\n                    </Table>\n                </div>\n            </div>\n            <div id='purchase-container'>\n                <div id='purchase-body'>\n                    <h2 class='wishlist' style={{ marginBottom: '3%' }}>\n                        { this.state.names[2] }\n                    <NameModal\n                        listnum={3}\n                        username={this.state.username}\n                        refresh={this.handleRefresh}\n                    />\n                    </h2>\n                    <Table class='wishlist'>\n                        <thead>\n                            <tr>\n                                <th>Cover Art</th>\n                                <th>Book Title</th>\n                                <th></th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>{this.state.body3}</tbody>\n                    </Table>\n                </div>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default WishlistPageWrapper;","import React from 'react';\nimport Footer from '../Footer';\nimport { Link } from 'react-router-dom';\nimport { Button, DropdownButton, Dropdown, Modal } from 'react-bootstrap';\nimport { Icon } from 'semantic-ui-react';\nimport { Table } from 'reactstrap';\nimport Context from '../Context';\nimport WishlistPageWrapper from '../WishlistPageWrapper';\n\nclass Wishlist extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        if (this.props.isLoggedIn) {\n            return (\n                <div>\n                    <div>\n                    <h1 class='wishlist'>\n                        Your Personal Wishlists \n                    </h1>\n                    <div className=\"body\">\n                        <WishlistPageWrapper\n                            username={this.props.username}\n                            isLoggedIn={this.props.isLoggedIn}\n                        />\n                    <Footer/>\n                    </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div class='ohoh'>\n                    <h1 class='display-4'>Oh, Oh!</h1>\n                    <p class='lead'>Looks like you're not logged in!</p>\n                    <p class='lead'>Click below to get to the login page.</p>\n                    <hr class='my-4' />\n                    <p class='lead'>\n                        <Link to='/login'>\n                            <button\n                                type='button'\n                                class='btn btn-outline-primary btn-block'\n                            >\n                                Take Me There!\n                            </button>\n                        </Link>\n                    </p>\n                </div>\n            );\n        }\n    }\n\n}\n\nexport default Wishlist;\n","import React from \"react\";\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport Footer from \"./Footer\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Context from \"./Context\";\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            hideIssue: true,\n            redirect: false,\n            hideLoader: true\n        };\n\n        //Must do the bind to have the dom update on change.\n        this.handleIssue = this.handleIssue.bind(this);\n        this.handleLoader = this.handleLoader.bind(this);\n    }\n\n    //Handles input in form\n\n    handleChange = event => {\n        this.setState({\n            [event.target.id]: event.target.value\n        });\n    };\n\n    //Method handles removes hidden attr from error message if input is bad.\n\n    handleIssue() {\n        this.setState({ hideIssue: false });\n    }\n\n    handleLoader() {\n        this.setState({ hideLoader: false });\n    }\n\n    //Handles the submit being clicked. Returns 3 for good. 2 and 1 for bad...\n\n    handleSubmit = event => {\n        this.setState({ hideLoader: false });\n        event.preventDefault();\n        fetch(\"/auth\", {\n            method: \"POST\",\n            body: JSON.stringify(this.state),\n            headers: { \"Content-Type\": \"application/json\" }\n        })\n            .then(res => res.json())\n            .then(json => {\n                if (json.result === 3) {\n                    this.setState({\n                        redirect: true,\n                        hideLoader: true\n                    });\n                } else {\n                    this.setState({ hideLoader: true });\n                    this.handleIssue();\n                }\n                // else if (json.result == 2) {\n                //     this.setState({ hideLoader: true });\n                //     this.handleIssue();\n                // } else if (json.result === 1) {\n                //     this.setState({ hideLoader: true });\n                //     this.handleIssue();\n                // }\n            });\n    };\n\n    render() {\n        const { username, password } = this.state;\n        const issueStyle = this.state.hideIssue ? { display: \"none\" } : {};\n        const loaderStyle = this.state.hideLoader ? { display: \"none\" } : {};\n\n        if (this.state.redirect) {\n            return (\n                <Context.Consumer>\n                    {context => (\n                        <Redirect\n                            push\n                            to={{\n                                pathname: \"/profile\",\n                                state: { username: context.username }\n                            }}\n                        />\n                    )}\n                </Context.Consumer>\n            );\n        }\n\n        return (\n            <div>\n                <div className='container tall-body'>\n                    <br />\n                    <h1 className='display-4'>Login:</h1>\n                    <hr />\n                    <h1 style={issueStyle}>\n                        Username and password don't match. <br /> Please Try\n                        Again.\n                    </h1>\n                    <form onSubmit={this.handleSubmit}>\n                        <FormGroup controlId='username' bsSize='large'>\n                            <FormLabel>Username:</FormLabel>\n                            <FormControl\n                                value={username}\n                                onChange={this.handleChange}\n                                type='username'\n                            />\n                        </FormGroup>\n                        <FormGroup controlId='password' bsSize='large'>\n                            <FormLabel>Password:</FormLabel>\n                            <FormControl\n                                value={password}\n                                onChange={this.handleChange}\n                                type='password'\n                            />\n                        </FormGroup>\n                        <div style={{ width: \"100%\" }}>\n                            <Link to='/signUp'>\n                                <Button style={{ width: \"47%\" }}>\n                                    Sign Up\n                                </Button>\n                            </Link>\n                            {/* This is wrong but hey. Status of logged in is changed when user clicks on login button. Username is passed into context */}\n                            <Context.Consumer>\n                                {context => (\n                                    <Button\n                                        style={{\n                                            width: \"47%\",\n                                            marginLeft: \"6%\"\n                                        }}\n                                        type='submit'\n                                        onClick={() => {\n                                            context.login();\n                                            context.setUsername(\n                                                this.state.username\n                                            );\n                                        }}\n                                    >\n                                        Login\n                                    </Button>\n                                )}\n                            </Context.Consumer>\n                        </div>\n\n                        <h1 style={loaderStyle}>\n                            <LinearProgress />\n                        </h1>\n                    </form>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport TextField from 'material-ui/TextField';\nimport Footer from '../components/Footer';\n\nimport {Link} from 'react-router-dom';\nimport Header from './Header';\n\nexport class SignupForm extends Component {\n\tcontinue = e => {\n\t\te.preventDefault();\n\t\tthis.props.nextStep();\n\t};\n\n\trender() {\n\t\tconst {values, handleChange} = this.props;\n\t\treturn (\n\t\t\t<MuiThemeProvider>\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className='sign-in-body'>\n\t\t\t\t\t\t<h1 className='display-4  container'>Sign Up Form</h1>\n\t\t\t\t\t\t<form onSubmit={this.continue}>\n\t\t\t\t\t\t\t<div className='sign-in-form container'>\n\t\t\t\t\t\t\t\t<div id='sign-up-left-col'>\n\t\t\t\t\t\t\t\t\tFirst Name:\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter your First Name'\n\t\t\t\t\t\t\t\t\t\tfloatingLabelText='First Name'\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange('FirstName')}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={values.FirstName}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tLast Name:\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter your Last Name'\n\t\t\t\t\t\t\t\t\t\tfloatingLabelText='Last Name'\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange('LastName')}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={values.LastName}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tEmail:\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter your Email'\n\t\t\t\t\t\t\t\t\t\tfloatingLabelText='Email'\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange('Email')}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={values.Email}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tUsername:\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter your Username'\n\t\t\t\t\t\t\t\t\t\tfloatingLabelText='Username'\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange('UserName')}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={values.UserName}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div id='sign-up-right-col'>\n\t\t\t\t\t\t\t\t\tNickname:\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter your Nickname'\n\t\t\t\t\t\t\t\t\t\tfloatingLabelText='Nickname'\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange('NickName')}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={values.NickName}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tAddress:\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\ttype='address'\n\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter your Address'\n\t\t\t\t\t\t\t\t\t\tfloatingLabelText='Address'\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange('Address')}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={values.Address}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tCity:\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\tid='standard-required'\n\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter your City'\n\t\t\t\t\t\t\t\t\t\tfloatingLabelText='City'\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange('City')}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={values.City}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tState:\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\tid='standard-required'\n\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Enter your State'\n\t\t\t\t\t\t\t\t\t\tfloatingLabelText='State'\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange('State')}\n\t\t\t\t\t\t\t\t\t\tdefaultValue={values.State}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t{/* Confirm Password:\n                                    <input\n                                        required\n                                        type='password'\n                                        className='form-control'\n                                        placeholder='Confirm Entered Passoword'\n                                        floatingLabelText='Password Confirmation'\n                                        onChange={handleChange(\"Password2\")}\n                                        defaultValue={values.Password2}\n                                    /> */}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t\t\tPassword:\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tid='psw'\n\t\t\t\t\t\t\t\t\tname='psw'\n\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\tplaceholder='Enter your Password'\n\t\t\t\t\t\t\t\t\tfloatingLabelText='Password'\n\t\t\t\t\t\t\t\t\tonChange={handleChange('Password')}\n\t\t\t\t\t\t\t\t\tdefaultValue={values.Password}\n\t\t\t\t\t\t\t\t\tpattern='(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}'\n\t\t\t\t\t\t\t\t\ttitle='Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<div className='sign-up-bottom-row'>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\tclass='btn btn-secondary btn-block'\n\t\t\t\t\t\t\t\t\t\tlabel='continue'\n\t\t\t\t\t\t\t\t\t\tprimary={true}\n\t\t\t\t\t\t\t\t\t\tstyle={styles.button}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tCONTINUE\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Footer />\n\t\t\t\t</React.Fragment>\n\t\t\t</MuiThemeProvider>\n\t\t);\n\t}\n}\n\nconst styles = {\n\tbutton: {\n\t\tmargin: 20\n\t}\n};\n\nexport default SignupForm;\n","import React, {Component} from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport {List, ListItem} from 'material-ui/List';\nimport Footer from '../components/Footer';\n\nexport class ConfirmForm extends Component {\n\t//GO to the next Page\n\tcontinue = e => {\n\t\te.preventDefault();\n\t\tconsole.log(e);\n\t\t//the backend goes here\n\t\tthis.props.nextStep();\n\t};\n\n\t// Go back to prev step\n\tback = e => {\n\t\te.preventDefault();\n\t\tthis.props.prevStep();\n\t};\n\n\tvalidate = e => {\n\t\te.preventDefault();\n\t\tfetch('/registration', {\n\t\t\tmethod: 'post',\n\t\t\tbody: JSON.stringify(this.props),\n\t\t\theaders: {'Content-Type': 'application/json'}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => {\n\t\t\t\tif (json.result === 3) {\n\t\t\t\t\tthis.props.nextStep(); //account created\n\t\t\t\t} else if (json.result == 2) {\n\t\t\t\t\t//email taken\n\t\t\t\t} else {\n\t\t\t\t\t// this.props.prevStep(); //username taken\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tvalues: {\n\t\t\t\tFirstName,\n\t\t\t\tLastName,\n\t\t\t\tEmail,\n\t\t\t\tAddress,\n\t\t\t\tCity,\n\t\t\t\tState,\n\t\t\t\tUserName,\n\t\t\t\tNickName\n\t\t\t}\n\t\t} = this.props;\n\t\treturn (\n\t\t\t<MuiThemeProvider>\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<h1 className='display-4  container'>\n\t\t\t\t\t\tPlease Review All Data\n\t\t\t\t\t</h1>\n\n\t\t\t\t\t<div className=' sign-in-body container'>\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tprimaryText='First Name'\n\t\t\t\t\t\t\t\tsecondaryText={FirstName}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tprimaryText='Last Name'\n\t\t\t\t\t\t\t\tsecondaryText={LastName}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tprimaryText='Email'\n\t\t\t\t\t\t\t\tsecondaryText={Email}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tprimaryText='Username'\n\t\t\t\t\t\t\t\tsecondaryText={UserName}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* <ListItem\n                                primaryText='Nickname'\n                                secondaryText={NickName}\n                            /> */}\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tprimaryText='Address'\n\t\t\t\t\t\t\t\tsecondaryText={Address}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ListItem primaryText='City' secondaryText={City} />\n\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\tprimaryText='State'\n\t\t\t\t\t\t\t\tsecondaryText={State}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t\t<div className='sign-up-bottom-row'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\tclass='btn btn-secondary btn-lg'\n\t\t\t\t\t\t\t\tlabel='Back'\n\t\t\t\t\t\t\t\tprimary={true}\n\t\t\t\t\t\t\t\tstyle={styles.button}\n\t\t\t\t\t\t\t\tonClick={this.back}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tBACK\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\tclass='btn btn-secondary btn-lg'\n\t\t\t\t\t\t\t\tlabel='Confirm & Continue'\n\t\t\t\t\t\t\t\tprimary={true}\n\t\t\t\t\t\t\t\tstyle={styles.button}\n\t\t\t\t\t\t\t\tonClick={this.validate}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCONTINUE\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Footer />\n\t\t\t\t</React.Fragment>\n\t\t\t</MuiThemeProvider>\n\t\t);\n\t}\n}\n\nconst styles = {\n\tbutton: {\n\t\tmargin: 20\n\t}\n};\n\nexport default ConfirmForm;\n","import React, { Component } from \"react\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport AppBar from \"material-ui/AppBar\";\nimport Footer from \"../components/Footer\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"./Header\";\n\nexport class SuccessForm extends Component {\n    //GO to the next Page\n    continue = e => {\n        e.preventDefault();\n        //the backend goes here\n        this.props.nextStep();\n    };\n\n    // Go back to prev step\n    prevStep = () => {\n        const { step } = this.state;\n        this.setState({\n            step: step - 1\n        });\n    };\n\n    render() {\n        return (\n            <MuiThemeProvider>\n                <React.Fragment>\n                    <div className='sign-in-body container'>\n                        <h1 className='display-4'>\n                            Thank you for your Submission\n                        </h1>\n                    </div>\n                    <Footer />\n                </React.Fragment>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default SuccessForm;\n","import React, { Component } from \"react\";\nimport SignupForm from \"./SignupForm\";\nimport ConfirmForm from \"./ConfirmForm\";\nimport SuccessForm from \"./SuccessForm\";\n\nexport class ApplicationForm extends Component {\n    state = {\n        step: 1,\n        FirstName: \"\",\n        LastName: \"\",\n        Email: \"\",\n        UserName: \"\",\n        NickName: \"\",\n        Password: \"\",\n        Password2: \"\",\n        Address: \"\",\n        City: \"\",\n        State: \"\"\n    };\n\n    // Proceed to next Step\n    nextStep = () => {\n        const { step } = this.state;\n        this.setState({\n            step: step + 1\n        });\n    };\n\n    // Go back to prev step\n    prevStep = () => {\n        const { step } = this.state;\n        this.setState({\n            step: step - 1\n        });\n    };\n\n    // Handle fields change\n    handleChange = input => e => {\n        this.setState({ [input]: e.target.value });\n    };\n\n    render() {\n        const { step } = this.state;\n        const {\n            FirstName,\n            LastName,\n            Email,\n            NickName,\n            Address,\n            City,\n            State,\n            Password,\n            Password2,\n            UserName\n        } = this.state;\n\n        const values = {\n            FirstName,\n            LastName,\n            NickName,\n            Email,\n            Address,\n            City,\n            State,\n            Password,\n            Password2,\n            UserName\n        };\n        switch (step) {\n            case 1:\n                return (\n                    <SignupForm\n                        nextStep={this.nextStep}\n                        handleChange={this.handleChange}\n                        values={values}\n                    />\n                );\n\n            case 2:\n                return (\n                    <ConfirmForm\n                        nextStep={this.nextStep}\n                        prevStep={this.prevStep}\n                        values={values}\n                    />\n                );\n            case 3:\n                return <SuccessForm />;\n\n            default:\n                break;\n        }\n    }\n}\n\nexport default ApplicationForm;\n\n// case 2:\n//   return (\n//       <PersonalInfo\n//           nextStep={this.nextStep}\n//           prevStep={this.prevStep}\n//           handleChange={this.handleChange}\n//           values={values}\n//       />\n//   );\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./css/index.css\";\n\nimport Home from \"./components/routes/HomePage\";\nimport Cart from \"./components/routes/CartPage\";\nimport Browse from \"./components/routes/BrowsePage\";\nimport ViewBook from \"./components/routes/ViewBookPage\";\nimport AuthorWorks from \"./components/routes/AuthorPage\";\nimport BookCard from \"./components/BookCard\";\nimport { ProfilePage } from \"./components/routes/ProfilePage\";\nimport Wishlist from \"./components/routes/WishlistPage\";\n\nimport Login from \"./components/Login\";\nimport Navbar from \"./components/NavBar\";\nimport ApplicationForm from \"./components/ApplicationForm\";\nimport Context from \"./components/Context\";\n// import Comment from \"./components/routes/CommentPage\";\n\nclass Provider extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    username: \"\",\n    isLoggedIn: false,\n    login: () => {\n      this.setState({ isLoggedIn: true });\n    },\n    logout: () => {\n      this.setState({ isLoggedIn: false, usernmae: \"\" });\n    },\n    setUsername: name => {\n      this.setState({ username: name });\n    }\n  };\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Provider>\n          <Router>\n            <React.Fragment>\n              {/* Below I am passing the context state into the Navbar component*/}\n              <Context.Consumer>\n                {context => (\n                  <div>\n                    <Navbar\n                      isLoggedIn={context.isLoggedIn}\n                      name={context.username}\n                    />\n                  </div>\n                )}\n              </Context.Consumer>\n\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route path='/index.html' component={Home} />\n                <Route path='/browse' component={Browse} />\n                <Route path='/login' component={Login} />\n                <Route path='/book/:id' component={ViewBook} />\n                <Route path='/author/:name' component={AuthorWorks} />\n                <Route path='/signUp' component={ApplicationForm} />\n                {/* Below I am passing the context state into the Profile component*/}\n                <Context.Consumer>\n                  {context => (\n                    <div>\n                      <Route\n                        path='/profile'\n                        component={() => (\n                          <ProfilePage isLoggedIn={context.isLoggedIn}\n                          \n                          /> \n                        )}\n                      />\n\n                      <Route\n                        path='/book/:id'\n                        component={() => (\n                          <ViewBook\n                            isLoggedIn={context.isLoggedIn}\n                            username={context.username}\n                           \n                          />\n                        )}\n                      />\n\n                      <Route\n                        path='/wishlist'\n                        component={() => (\n                          <Wishlist\n                            isLoggedIn={context.isLoggedIn}\n                            username={context.username}\n                          />\n                        )}\n                      />\n\n                      <Route\n                        path='/cart'\n                        component={() => (\n                          <Cart\n                            isLoggedIn={context.isLoggedIn}\n                            username={context.username}\n                          />\n                        )}\n                      />\n                    </div>\n                  )}\n                </Context.Consumer>\n              </Switch>\n            </React.Fragment>\n          </Router>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default Provider;\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}